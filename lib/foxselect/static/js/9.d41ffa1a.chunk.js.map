{"version":3,"sources":["../node_modules/react-select/dist/react-select.browser.esm.js","../node_modules/react-radio-group/lib/index.js","components/selects/SelectProductType.js","components/InputFrequency.js","lib/utilities.js","components/FrequencyUnit.js","components/selects/SelectSize.js","components/CompensationOptions.js","components/checkboxes/AECQ200.js","components/checkboxes/VibrationResistant.js","components/selects/SelectEnableType.js","components/selects/SelectTolerance.js","components/selects/SelectSpread.js","components/selects/SelectOutput.js","components/VoltageOptions.js","components/selects/SelectVoltage.js","components/selects/SelectStability.js","components/selects/SelectLoad.js","components/selects/SelectOpTemp.js","components/SizeOptions.js","components/selects/SelectPin1.js","components/AdditionalOptionsForm.js","components/PartDetails.js","components/PartSelector.js"],"names":["index","Component","manageState","Select","Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_get","_x","_x2","_x3","_again","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","getter","get","parent","getPrototypeOf","_interopRequireDefault","obj","__esModule","_classCallCheck","instance","TypeError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_propTypes2","require","_react2","Radio","_React$Component","this","apply","_context$radioGroup","context","radioGroup","name","selectedValue","onChange","optional","checked","bind","createElement","type","contextTypes","RadioGroup","_React$Component2","_props","_props2","children","rest","keys","indexOf","_objectWithoutProperties","defaultProps","propTypes","string","oneOfType","number","bool","func","node","isRequired","childContextTypes","SelectProductType","handleChange","selectedOption","updateConfiguredPart","product_type","label","productTypeOptions","console","log","page","window","location","pathname","currentView","ReactGA","pageview","htmlFor","isClearable","placeholder","options","InputFrequency","formatFrequency","e","formattedFrequency","frequency","floatFreq","parseFloat","toFixed","toString","setState","hasFocus","handleFocus","state","configuredPart","disabled","styles","backgroundColor","className","style","step","min","onFocus","onBlur","FrequencyUnit","frequencyUnitLabels","confirm","id","frequency_unit","SelectSize","sizeOptions","loadingPartOptions","size","optionValue","customStyles","control","minWidth","isLoading","autoBlur","matchPos","CompensationOptions","selectedCompensation","output","whiteSpace","AECQ200","defaultValue","substring","package_option","VibrationResistant","SelectEnableType","enableTypeOptions","enableTypeValue","enable_type","enableType","SelectTolerance","toleranceOptions","tolerance","toleranceValue","SelectSpread","spreadOptions","spreadValue","spread","SelectOutput","savedOutputOption","voltage","outputOptions","outputValue","VoltageOptions","getOptionalInputCurrent","optionalInputCurrent","available","message","range","getStandardInputCurrent","standardInputCurrent","delay","clear","voltageOption","showOptions","excludedOutputs","includes","inputOptions","stdInputCurrentMsg","fontSize","marginTop","SelectVoltage","voltageOptions","voltageValue","SelectStability","selectedStability","stabilityLabelArray","split","stabilityFloat","stabilityOptions","stabilityValue","stability","SelectLoad","loadOptions","loadValue","load","SelectOpTemp","savedOpTempOption","optempOptions","optempValue","optemp","SizeOptions","sizeValue","SelectPin1","pin_1Options","pin_1Value","pin_1","AdditionalOptionsForm","partOptions","aecq200","vibrationResistant","aecq200Options","parts","sizes","getSizeOptions","paddingLeft","PartDetails","additionalPartDetails","foundAdditionalDetails","partDetailRows","setPartDetailRow","partDetail","returnValue","displayOrder","displayorder","src","maxWidth","alt","href","package_type","charAt","toUpperCase","slice","scope","handleClick","cart","editing","setCurrentView","cart_id","updateCart","map","axiosUrl","FOXPART_API_ROOT","axios","then","response","additionalDetails","data","catch","error","buttonText","onClick","width","PartSelector","ref","form","toLowerCase","isPartConfigured","API_ENV","React"],"mappings":"4HAAA,2MA8DIA,GAFFC,YAEUC,YAAYC,MAETH,O,iCC9DfI,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAGT,IAAIC,EAAWJ,OAAOK,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcV,OAAOY,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,GAEnPS,EAAgB,WAAc,SAASC,EAAiBV,EAAQW,GAAS,IAAK,IAAIV,EAAI,EAAGA,EAAIU,EAAMR,OAAQF,IAAK,CAAE,IAAIW,EAAaD,EAAMV,GAAIW,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAMrB,OAAOC,eAAeK,EAAQY,EAAWP,IAAKO,IAAiB,OAAO,SAAUI,EAAaC,EAAYC,GAAiJ,OAA9HD,GAAYP,EAAiBM,EAAYV,UAAWW,GAAiBC,GAAaR,EAAiBM,EAAaE,GAAqBF,GAA7gB,GAEhBG,EAAO,SAAaC,EAAIC,EAAKC,GAAqC,IAA9B,IAAIC,GAAS,EAAwBA,GAAQ,CAAE,IAAIC,EAASJ,EAAIK,EAAWJ,EAAKK,EAAWJ,EAAKC,GAAS,EAAsB,OAAXC,IAAiBA,EAASG,SAASrB,WAAW,IAAIsB,EAAOlC,OAAOmC,yBAAyBL,EAAQC,GAAW,QAAaK,IAATF,EAAJ,CAA4O,GAAI,UAAWA,EAAQ,OAAOA,EAAK/B,MAAgB,IAAIkC,EAASH,EAAKI,IAAK,QAAeF,IAAXC,EAAwB,OAAoB,OAAOA,EAAOvB,KAAKkB,GAA/V,IAAIO,EAASvC,OAAOwC,eAAeV,GAAS,GAAe,OAAXS,EAAmB,OAA2Bb,EAAKa,EAAQZ,EAAMI,EAAUH,EAAMI,EAAUH,GAAS,EAAMK,EAAOK,OAASH,IAE5c,SAASK,EAAuBC,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAE,QAAWA,GAIzF,SAASE,EAAgBC,EAAUvB,GAAe,KAAMuB,aAAoBvB,GAAgB,MAAM,IAAIwB,UAAU,qCAEhH,SAASC,EAAUC,EAAUC,GAAc,GAA0B,oBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAIH,UAAU,kEAAoEG,GAAeD,EAASpC,UAAYZ,OAAOkD,OAAOD,GAAcA,EAAWrC,UAAW,CAAEuC,YAAa,CAAEhD,MAAO6C,EAAU7B,YAAY,EAAOE,UAAU,EAAMD,cAAc,KAAe6B,IAAYjD,OAAOoD,eAAiBpD,OAAOoD,eAAeJ,EAAUC,GAAcD,EAASK,UAAYJ,GAEje,IAEIK,EAAcb,EAFDc,EAAQ,MAMrBC,EAAUf,EAFDc,EAAQ,KAIjBE,EAAS,SAAUC,GAGrB,SAASD,IACPb,EAAgBe,KAAMF,GAEtBhC,EAAKzB,OAAOwC,eAAeiB,EAAM7C,WAAY,cAAe+C,MAAMC,MAAMD,KAAMnD,WA0BhF,OA/BAuC,EAAUU,EAAOC,GAQjB3C,EAAa0C,EAAO,CAAC,CACnB9C,IAAK,SACLR,MAAO,WACL,IAAI0D,EAAsBF,KAAKG,QAAQC,WACnCC,EAAOH,EAAoBG,KAC3BC,EAAgBJ,EAAoBI,cACpCC,EAAWL,EAAoBK,SAE/BC,EAAW,GAQf,YAPsB/B,IAAlB6B,IACFE,EAASC,QAAUT,KAAK1C,MAAMd,QAAU8D,GAElB,oBAAbC,IACTC,EAASD,SAAWA,EAASG,KAAK,KAAMV,KAAK1C,MAAMd,QAG9CqD,EAAO,QAAYc,cAAc,QAASlE,EAAS,GAAIuD,KAAK1C,MAAO,CACxEsD,KAAM,QACNP,KAAMA,GACLG,QAIAV,EAhCI,CAiCVD,EAAO,QAAY3D,WAEtBK,EAAQuD,MAAQA,EAGhBA,EAAMe,aAAe,CACnBT,WAAYT,EAAW,QAAYxB,QAGrC,IAAI2C,EAAc,SAAUC,GAG1B,SAASD,IACP7B,EAAgBe,KAAMc,GAEtBhD,EAAKzB,OAAOwC,eAAeiC,EAAW7D,WAAY,cAAe+C,MAAMC,MAAMD,KAAMnD,WAqCrF,OA1CAuC,EAAU0B,EAAYC,GAQtB3D,EAAa0D,EAAY,CAAC,CACxB9D,IAAK,kBACLR,MAAO,WACL,IAAIwE,EAAShB,KAAK1C,MAKlB,MAAO,CACL8C,WAAY,CACVC,KANOW,EAAOX,KAMFC,cALIU,EAAOV,cAKmBC,SAJ/BS,EAAOT,aAQvB,CACDvD,IAAK,SACLR,MAAO,WACL,IAAIyE,EAAUjB,KAAK1C,MACfpB,EAAY+E,EAAQ/E,UAIpBgF,GAHOD,EAAQZ,KACCY,EAAQX,cACbW,EAAQV,SACRU,EAAQC,UAEnBC,EAzFV,SAAkCpC,EAAKqC,GAAQ,IAAIzE,EAAS,GAAI,IAAK,IAAIC,KAAKmC,EAAWqC,EAAKC,QAAQzE,IAAM,GAAkBP,OAAOY,UAAUC,eAAeC,KAAK4B,EAAKnC,KAAcD,EAAOC,GAAKmC,EAAInC,IAAM,OAAOD,EAyFlM2E,CAAyBL,EAAS,CAAC,YAAa,OAAQ,gBAAiB,WAAY,aAEhG,OAAOpB,EAAO,QAAYc,cACxBzE,EACAiF,EACAD,OAKCJ,EA3CS,CA4CfjB,EAAO,QAAY3D,WAEtBK,EAAQuE,WAAaA,EAGrBA,EAAWS,aAAe,CACxBrF,UAAW,OAGb4E,EAAWU,UAAY,CACrBnB,KAAMV,EAAW,QAAY8B,OAC7BnB,cAAeX,EAAW,QAAY+B,UAAU,CAAC/B,EAAW,QAAY8B,OAAQ9B,EAAW,QAAYgC,OAAQhC,EAAW,QAAYiC,OACtIrB,SAAUZ,EAAW,QAAYkC,KACjCX,SAAUvB,EAAW,QAAYmC,KAAKC,WACtC7F,UAAWyD,EAAW,QAAY+B,UAAU,CAAC/B,EAAW,QAAY8B,OAAQ9B,EAAW,QAAYkC,KAAMlC,EAAW,QAAYxB,UAGlI2C,EAAWkB,kBAAoB,CAC7B5B,WAAYT,EAAW,QAAYxB,S,4HCxFtB8D,E,2MAtCbC,aAAe,SAACC,GACd,EAAK7E,MAAM8E,qBAAqB,eAAeD,I,wEAU3C,KAAOnC,KAAK1C,MAAM+E,aAAaC,OAAS,MAAQC,IAAmB,GAAG/F,QACxEgG,QAAQC,IAAI,+EACZF,IAAmB,GAAK,CAAC/F,MAAO,IAAK8F,MAAO,WAC5CE,QAAQC,IAAR,+BAAuCF,MAEzC,IAAMjC,EAAkB,KAAON,KAAK1C,MAAM+E,aAAaC,MAAS,KAAOtC,KAAK1C,MAAM+E,aAC9EK,EAAOC,OAAOC,SAASC,SAAW,aAAe7C,KAAK1C,MAAMwF,YAKhE,OAJI,OAASxC,IACXoC,GAAO,IAAM1C,KAAK1C,MAAM+E,aAAaC,OACvCtC,KAAK1C,MAAMyF,QAAQC,SAAUN,GAG3B,6BACE,2BAAOO,QAAQ,gBAAf,gBACA,kBAAC,IAAD,CACE5C,KAAK,eACL7D,MAAO8D,EACP4C,aAAW,EACX3C,SAAUP,KAAKkC,aACfiB,YAAY,kBACZC,QAASb,W,GAjCarG,a,ICmDjBmH,E,YAlDb,aAAc,IAAD,8BACX,+CAQFC,gBAAkB,SAACC,GACjB,IAAMC,ECbH,SAA0BC,GAE/B,IAAIC,EAAYC,WAAYF,GAkB5B,OAjBAjB,QAAQC,IAAI,qDACZD,QAAQC,IAAR,yCAAiDiB,GAEjDA,EAAYA,EAAUE,QAAQ,GAC9BpB,QAAQC,IAAR,oDAA4DiB,GAE5DA,GADAA,EAAYC,WAAYD,IACFG,WACtBrB,QAAQC,IAAR,oDAA4DiB,GAGxD,QAAUA,IAAc,IAAMA,EAAUrC,QAAQ,OAClDqC,GAAa,MACflB,QAAQC,IAAR,4FAAoGiB,GAEhG,QAAUA,IACZA,EAAY,OAEPA,EDPsBJ,CAAiBC,EAAE5G,OAAOH,OACrD,EAAKsH,SAAS,CAACC,UAAU,EAAON,UAAWD,IAAoB,WAC7D,EAAKlG,MAAM8E,qBAAqB,YAAY,CAACE,MAAOkB,EAAoBhH,MAAOgH,QAZtE,EAgBbtB,aAAe,SAACqB,GACdf,QAAQC,IAAI,uEACZ,EAAKqB,SAAS,CAACL,UAAWF,EAAE5G,OAAOH,SAlBxB,EAqBbwH,YAAc,WACZ,EAAKF,SAAS,CAACC,UAAU,KAnBzB,EAAKE,MAAQ,CACXR,UAAW,GACXM,UAAU,GALD,E,sEAyBJ,IACCG,EAAmBlE,KAAK1C,MAAxB4G,eACJ1H,EAAU,MAAQ0H,EAAeT,UAAUjH,OAAS,QAAU0H,EAAeT,UAAUjH,MAAS0H,EAAeT,UAAUjH,MAAQ,GACjIwD,KAAKiE,MAAMF,WACbvH,EAAQwD,KAAKiE,MAAMR,WAErB,IAAIU,GAAW,EACZ,WAAaD,EAAeT,UAAUjH,OAAS,MAAQ0H,EAAe7B,aAAa7F,MACpF2H,GAAW,GACD,EAAID,EAAe7B,aAAa7F,MAAM6E,QAAQ,OACxD8C,GAAW,GAGb,IAAMC,EAAWD,GAAY,WAAaD,EAAeT,UAAUjH,MAAS,CAAC6H,gBAAiB,aAAe,GAG7G,OACE,6BACE,2BAAOpB,QAAQ,aAAf,aACA,2BAAOqB,UAAU,eAAeC,MAAOH,EAAQxD,KAAK,OAAOP,KAAK,YAAYmE,KAAK,MAAMC,IAAI,IAAIN,SAAUA,EAAU3H,MAAOA,EAAOkI,QAAS1E,KAAKgE,YAAazD,SAAUP,KAAKkC,aAAcyC,OAAQ3E,KAAKsD,uB,GA9CjLpH,aE2Cd0I,E,2MArCb1C,aAAe,SAACqB,GAAO,IACbW,EAAmB,EAAK5G,MAAxB4G,eACFW,EAAsB,CAAC,IAAO,MAAO,IAAO,OAC9C,MAAQX,EAAe7B,aAAa7F,OAAS,MAAQ0H,EAAe7B,aAAa7F,MAC/EmG,OAAOmC,QAAQ,wEACjB,EAAKxH,MAAM8E,qBAAqBmB,EAAE5G,OAAO0D,KAAK,CAAE7D,MAAO+G,EAAE5G,OAAOH,MAAO8F,MAAOuC,EAAoBtB,EAAE5G,OAAOH,SAE7G,EAAKc,MAAM8E,qBAAqBmB,EAAE5G,OAAO0D,KAAK,CAAE7D,MAAO+G,EAAE5G,OAAOH,MAAO8F,MAAOuC,EAAoBtB,EAAE5G,OAAOH,U,wEAItG,IACC0H,EAAmBlE,KAAK1C,MAAxB4G,eAGR,OACE,6BACE,2BAAOI,UAAU,GAAGrB,QAAQ,kBAA5B,QACA,yBAAKqB,UAAU,cACb,2BAAOA,UAAU,mBAAmB1D,KAAK,QAAQP,KAAK,iBAAiB7D,MAAM,MAAMuI,GAAG,MAAMtE,QAAiD,QAAxCyD,EAAec,eAAexI,MAAiB+D,SAAUP,KAAKkC,eACnK,2BAAOoC,UAAU,mBAAmBrB,QAAQ,OAA5C,QAIuC,qBAAhCiB,EAAe7B,eACrB,EAZU,CAAC,IAAI,IAAI,KAYNhB,QAAS6C,EAAe7B,aAAa7F,QACrD,yBAAK8H,UAAU,cACb,2BAAOA,UAAU,mBAAmB1D,KAAK,QAAQP,KAAK,iBAAiB7D,MAAM,MAAMuI,GAAG,MAAMtE,QAAiD,QAAxCyD,EAAec,eAAexI,MAAiB+D,SAAUP,KAAKkC,eACnK,2BAAOoC,UAAU,mBAAmBrB,QAAQ,OAA5C,a,GAnCkB/G,a,SC+Fb+I,E,2MA5Fb/C,aAAe,SAACC,GACd,EAAK7E,MAAM8E,qBAAqB,OAAOD,I,wEAGhC,IAAD,EACsDnC,KAAK1C,MAAzD4G,EADF,EACEA,eAAgBgB,EADlB,EACkBA,YAAaC,EAD/B,EAC+BA,mBAC/BC,EAAOlB,EAAekB,KACxBC,EAAcD,EAOdf,EAAkB,KAClB,IAAMa,EAAYpI,QAAU,MAAQsI,EAAK5I,MAC3C6H,EAAkB,OACT,IAAMa,EAAYpI,QAAU,EAAIsI,EAAK5I,MAAMM,OACpDuH,EAAkB,SACT,EAAIa,EAAYpI,QAAU,MAAQsI,EAAK5I,OAEvC,EAAI0I,EAAYpI,QAAU,MAAQsI,EAAK5I,OAAa4I,EAAK5I,MAAMM,OAI1E,IAAMwI,EAAe,CACnBC,QAAS,SAAAnB,GAAM,sBAASA,EAAT,CAAiBC,gBAAiBA,MA8CnD,OAvBI,IAAMa,EAAYpI,QAAUoI,EAAY,GAAG1I,MAAM6E,QAAQ,OAAS,IAAMgE,EAAY7I,MAAM6E,QAAQ,OAEpGgE,EAAc,CAAE7I,MAAO6I,EAAY7I,MAAO8F,MAAO+C,EAAY/C,QAG3D,OAAS+C,GAA4C,qBAAtBA,EAAY7I,OAAyB,GAAK6I,EAAY7I,MAAM6E,QAAQ,OACrGgE,EAAc,IAkBd,yBAAKd,MAAO,CAACiB,SAAU,UACrB,2BAAOvC,QAAQ,QAAf,QACA,kBAAC,IAAD,CACE5C,KAAK,OACL7D,MAAO6I,EACPnC,aAAW,EACXuC,UAAWN,EACX5E,SAAUP,KAAKkC,aACfiB,YAAY,UACZuC,UAAU,EACVC,SAAS,QACTvC,QAAS8B,EACTd,OAAQkB,S,GAvFOpJ,a,kBCmDV0J,E,YAjDb,aAAc,IAAD,8BACX,+CACK1D,aAAe,EAAKA,aAAaxB,KAAlB,gBAFT,E,0EAKAyB,IAEXC,EADiCpC,KAAK1C,MAA9B8E,sBACc,SAAU,CAAC5F,MAAO2F,EAAgBG,MAAO,mB,+BAGxD,IACC4B,EAAmBlE,KAAK1C,MAAxB4G,eAEF2B,EACJ,IAAM3B,EAAe4B,OAAOtJ,MAAMM,QAC7B,MAAQoH,EAAe4B,OAAOtJ,OAAS,MAAQ0H,EAAe4B,OAAOtJ,MAC3C,GAA9B0H,EAAe4B,OAAOtJ,MAEzB,OACE,yBAAK8H,UAAU,YACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,yBACb,kBAAC,aAAD,CAAYjE,KAAK,sBAAsBC,cAAeuF,EAAsBtF,SAAUP,KAAKkC,cAEzF,yBAAKoC,UAAU,OACb,yBAAKA,UAAU,QAAQC,MAAO,CAACwB,WAAY,WACzC,2BAAO9C,QAAQ,oBAAf,kCAEF,yBAAKqB,UAAU,QAAQC,MAAO,CAACwB,WAAY,WACzC,kBAAC,QAAD,CAAOvJ,MAAM,IAAIuI,GAAG,uBAGxB,yBAAKT,UAAU,OACb,yBAAKA,UAAU,QAAQC,MAAO,CAACwB,WAAY,WACzC,2BAAO9C,QAAQ,oBAAf,iCAEF,yBAAKqB,UAAU,QAAQC,MAAO,CAACwB,WAAY,WACvC,kBAAC,QAAD,CAAOvJ,MAAM,IAAIuI,GAAG,+B,GAvCN7I,aC0HnB8J,E,2MA3Fb9D,aAAe,SAACqB,GAAO,IAAD,EAC6B,EAAKjG,MAA9C4G,EADY,EACZA,eAAgB9B,EADJ,EACIA,qBAEpB5F,EAAQ,GACR8F,EAAQ,GACZ,OAAO4B,EAAe7B,aAAa7F,OACjC,IAAK,IAEH4F,EAAqB,iBADrB5F,EAAU+G,EAAE5G,OAAO8D,QAAW,KAAO,MAErC,MAEF,IAAK,IACH,OAAOyD,EAAekB,KAAK5I,OACzB,IAAK,MACL,IAAK,MACL,IAAK,UACL,IAAK,UACHA,EAAU+G,EAAE5G,OAAO8D,QAAW,MAAQ,MACtC6B,EAAQ,aACR,MAEF,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,cACL,IAAK,cACL,IAAK,cACL,IAAK,cACL,IAAK,cACL,IAAK,cACH9F,EAAU+G,EAAE5G,OAAO8D,QAAW,MAAQ,MACtC6B,EAAQ,aACR,MAEF,QACE,IAAM2D,EAAiB,OAAU1C,EAAE5G,OAAOH,MAAM0J,UAAU,EAAE,GAAM,MAAQ,MAC1E1J,EAAU+G,EAAE5G,OAAO8D,QAAW8C,EAAE5G,OAAOH,MAAQyJ,EAEnD7D,EAAqB,OAAO,CAAC5F,MAAOA,EAAO8F,MAAOA,IAClD,MAEF,IAAK,IAEHF,EAAqB,SADrB5F,EAAU+G,EAAE5G,OAAO8D,QAAW,KAAO,Q,wEAUlC,IACCyD,EAAmBlE,KAAK1C,MAAxB4G,eAEJ1H,EAAQ,GACRiE,GAAU,EACd,OAAOyD,EAAe7B,aAAa7F,OACjC,IAAK,IACHA,EAAQ,KACL,OAAS0H,EAAeiC,eAAe3J,QACxCiE,GAAU,GACZ,MAEF,IAAK,KACHjE,EAAQ0H,EAAekB,KAAK5I,MAAM0J,UAAU,EAAE,GAAK,OACtChC,EAAekB,KAAK5I,QAC/BiE,GAAU,GACZ,MAEF,IAAK,IACHjE,EAAQ,KAE2B,qBAA1B0H,EAAe4B,QACnB,OAAS5B,EAAe4B,OAAOtJ,QAElCiE,GAAU,GAMhB,OACE,yBAAK6D,UAAU,2BACb,2BAAO1D,KAAK,WAAW0D,UAAU,mBAAmBS,GAAG,WAAWvI,MAAOA,EAAOiE,QAASA,EAASF,SAAUP,KAAKkC,eACzG,2BAAOe,QAAQ,WAAWqB,UAAU,oBAApC,iB,GArHMpI,aCyBPkK,E,2MAvBblE,aAAe,SAACqB,GAAO,IACbnB,EAAyB,EAAK9E,MAA9B8E,qBAERI,QAAQC,IAAR,mCAAsCc,EAAE5G,OAAO8D,SAC3C8C,EAAE5G,OAAO8D,QACX2B,EAAsB,iBAAkB,MAExCA,EAAsB,iBAAkB,O,wEAInC,IACC8B,EAAmBlE,KAAK1C,MAAxB4G,eAER,OACE,yBAAKI,UAAU,cACb,2BAAO1D,KAAK,WAAW0D,UAAU,mBAAmBS,GAAG,sBAAsBvI,MAAM,KAAKiE,QAAU,OAASyD,EAAeiC,eAAe3J,MAAQ+D,SAAUP,KAAKkC,eAChK,2BAAOe,QAAQ,sBAAsBqB,UAAU,oBAA/C,4B,GAnByBpI,aCkDlBmK,E,2MA/CbnE,aAAe,SAACC,GACd,EAAK7E,MAAM8E,qBAAqB,cAAcD,I,wEAGvC,IAAD,EAC4DnC,KAAK1C,MAA/D4G,EADF,EACEA,eAAgBoC,EADlB,EACkBA,kBAAmBnB,EADrC,EACqCA,mBACrCoB,EAAyD,qBAA/BrC,EAAesC,YAA8BtC,EAAesC,YAAYhK,MAAQ,GAE5G6I,EAAc,KACdhB,EAAkB,KAClB,IAAMiC,EAAkBxJ,QAAU,MAAQyJ,EAE5ClC,EAAkB,OACT,IAAMiC,EAAkBxJ,QAAU,EAAIyJ,EAAgBzJ,QAE/DuH,EAAkB,SAClBgB,EAAcnB,EAAeuC,YACpB,EAAIH,EAAkBxJ,QAAU,MAAQyJ,GAGxC,EAAID,EAAkBxJ,QAAU,MAAQyJ,GAAmB,EAAIA,EAAgBzJ,SAExFuI,EAAcnB,EAAeuC,YAG/B,IAAMnB,EAAe,CACnBC,QAAS,SAAAnB,GAAM,sBAASA,EAAT,CAAiBC,gBAAiBA,MAGnD,OACE,6BACE,2BAAOpB,QAAQ,eAAf,uBACA,kBAAC,IAAD,CACE5C,KAAK,cACL7D,MAAO6I,EACP9E,SAAUP,KAAKkC,aACfiB,YAAY,cACZC,QAASkD,EACTlC,OAAQkB,EACRpC,aAAW,EACXuC,UAAWN,S,GA1CUjJ,aCmFhBwK,E,2MAjFbxE,aAAe,SAACC,GACd,EAAK7E,MAAM8E,qBAAqB,YAAYD,I,wEAGrC,IAAD,EAC2DnC,KAAK1C,MAA9D4G,EADF,EACEA,eAAgByC,EADlB,EACkBA,iBAAkBxB,EADpC,EACoCA,mBAI1C,QAAwC1G,WAA7ByF,EAAe0C,UAA1B,CAGA,IAAIC,EAAsD,qBAA7B3C,EAAe0C,UAA4B1C,EAAe0C,UAAUpK,MAAQ,GAOrG6I,EAAc,KACdhB,EAAkB,KAClB,IAAMsC,EAAiB7J,QAAU,MAAQ+J,EAS3CxC,EAAkB,OACT,IAAMsC,EAAiB7J,QAAU,EAAI+J,EAAe/J,QAQ7DuH,EAAkB,SAClBgB,EAAcnB,EAAe0C,WACpB,EAAID,EAAiB7J,QAAU,MAAQ+J,GAQvC,EAAIF,EAAiB7J,QAAU,MAAQ+J,GAAkB,EAAIA,EAAe/J,SAMrFuI,EAAcnB,EAAe0C,WAG/B,IAAMtB,EAAe,CACnBC,QAAS,SAAAnB,GAAM,sBAASA,EAAT,CAAiBC,gBAAiBA,MAGnD,OACE,6BACE,2BAAOpB,QAAQ,aAAf,aACA,kBAAC,IAAD,CACE5C,KAAK,YACL7D,MAAO6I,EACPnC,aAAW,EACXuC,UAAWN,EACX5E,SAAUP,KAAKkC,aACfiB,YAAY,eACZwC,SAAS,QACTvC,QAASuD,EACTvC,OAAQkB,U,GA5EYpJ,aCiDf4K,E,2MA/Cb5E,aAAe,SAACC,GACd,EAAK7E,MAAM8E,qBAAqB,SAASD,I,wEAGlC,IAAD,EACoCnC,KAAK1C,MAAvC4G,EADF,EACEA,eAAgB6C,EADlB,EACkBA,cAClBC,EAAgD,qBAA1B9C,EAAe+C,OAAyB/C,EAAe+C,OAAOzK,MAAQ,GAE9F6I,EAAc,KACdhB,EAAkB,KAClB,IAAM0C,EAAcjK,QAAU,MAAQkK,EAExC3C,EAAkB,OACT,IAAM0C,EAAcjK,QAAU,EAAIkK,EAAYlK,QAEvDuH,EAAkB,SAClBgB,EAAcnB,EAAe+C,QACpB,EAAIF,EAAcjK,QAAU,MAAQkK,GAGpC,EAAID,EAAcjK,QAAU,MAAQkK,GAAe,EAAIA,EAAYlK,SAE5EuI,EAAcnB,EAAe+C,QAG/B,IAAM3B,EAAe,CACnBC,QAAS,SAAAnB,GAAM,sBAASA,EAAT,CAAiBC,gBAAiBA,MAGnD,OACE,6BACE,2BAAOpB,QAAQ,UAAf,gBACA,kBAAC,IAAD,CACE5C,KAAK,SACL7D,MAAO6I,EACP9E,SAAUP,KAAKkC,aACfiB,YAAY,kBACZC,QAAS2D,EACT3C,OAAQkB,EACRpC,aAAW,S,GAzCMhH,aCgKZgL,E,YA9Jb,aAAc,IAAD,8BACX,+CAuCFhF,aAAe,SAACC,GAAoB,IAAD,EACgB,EAAK7E,MAA9C4G,EADyB,EACzBA,eAAgB9B,EADS,EACTA,qBAGxB,OAAO8B,EAAe7B,aAAa7F,OACjC,IAAK,IACC,MAAQ0H,EAAekB,KAAK5I,OAAS,OAAS2F,GAAkB,MAAQA,EAAe3F,OACzF4F,EAAsB,QAAS,CAAE5F,MAAO,IAAK8F,MAAO,QAAS,GAE3D,MAAQ4B,EAAekB,KAAK5I,OAAS,OAAS2F,GAAkB,MAAQA,EAAe3F,OACzF4F,EAAsB,QAAS,CAAE5F,MAAO,IAAK8F,MAAO,oBAAqB,GAEvE,MAAQ4B,EAAekB,KAAK5I,OAAS,OAAS2F,GAAkB,MAAQA,EAAe3F,OACzF4F,EAAsB,QAAS,CAAE5F,MAAO,IAAK8F,MAAO,oBAAqB,GAO/EF,EAAsB,SAAUD,IA1DhC,EAAK8B,MAAQ,CACXkD,kBAAmB,MAHV,E,gGAoBsB,IAAD,EACiBnH,KAAK1C,MAA9C4G,EADwB,EACxBA,eAAgB9B,EADQ,EACRA,qBAChB+E,EAAsBnH,KAAKiE,MAA3BkD,kBAOuB,OAA3BjD,EAAekD,SAA0C,OAAtBD,GAEF,MAAjCjD,EAAekD,QAAQ5K,QACnB,EAAI2K,EAAkB3K,MAAM6E,QAAQ,OACpC,EAAI8F,EAAkB3K,MAAM6E,QAAQ6C,EAAe4B,OAAOtJ,QAE9D4F,EAAqB,SAAS+E,K,+BA4B3B,IAAD,EACyCnH,KAAK1C,MAA5C4G,EADF,EACEA,eAAgBiB,EADlB,EACkBA,mBAClBkC,EAAkBrH,KAAK1C,MAAvB+J,cAIAC,EAAgD,qBAA1BpD,EAAe4B,OAAyB5B,EAAe4B,OAAOtJ,MAAQ,GAmB9F6I,EAAc,KACdhB,EAAkB,KAqBlB,IAAMgD,EAAcvK,QAAU,OAASwK,EAEzCjD,EAAkB,OACT,IAAMgD,EAAcvK,QAAU,EAAIwK,EAAYxK,QAEvDuH,EAAkB,SAClBgB,EAAcnB,EAAe4B,QACpB,EAAIuB,EAAcvK,QAAU,OAASwK,GAGrC,EAAID,EAAcvK,QAAU,OAASwK,GAAe,EAAIA,EAAYxK,SAE7EuI,EAAcnB,EAAe4B,QAG/B,IAAMR,EAAe,CACnBC,QAAS,SAAAnB,GAAM,sBAASA,EAAT,CAAiBC,gBAAiBA,MAanD,MATqC,qBAA1BH,EAAe4B,QAA0B,OAAS5B,EAAe4B,OAAOtJ,QAEjF6K,EAAgB,CADhBhC,EAAc,CAAC7I,MAAO,KAAM8F,MAAO,qBAKjC,OAAS+C,GAA4C,qBAAtBA,EAAY7I,QAA0B,EAAI6I,EAAY7I,MAAM6E,QAAQ,OACrGgE,EAAc,IAGd,6BACE,2BAAOpC,QAAQ,UAAf,UACA,kBAAC,IAAD,CACE5C,KAAK,SACL7D,MAAO6I,EACP9E,SAAUP,KAAKkC,aACfiB,YAAY,YACZwC,SAAS,QACTvC,QAASiE,EACTjD,OAAQkB,EACRpC,aAAW,EACXuC,UAAWN,S,GAzJMjJ,aCydZqL,E,2MAnbbC,wBAA0B,WAAO,IACvBtD,EAAmB,EAAK5G,MAAxB4G,eACFT,EAAYE,WAAYO,EAAeT,UAAUjH,OAEjDiL,EAAuB,CAACC,WAAW,EAAMC,QAAS,IAExD,OAAOzD,EAAekD,QAAQ5K,OAC5B,IAAK,IACL,IAAK,IACL,IAAK,MACL,IAAK,MACC,KAAOiH,GAAa,IAAMA,EAC5BgE,EAAqBE,QAAU,QACtB,IAAMlE,EACfgE,EAAqBE,QAAU,SAE/BF,EAAqBC,WAAY,EACjCD,EAAqBG,MAAQ,cAC7BH,EAAqBE,QAAU,OAEjC,MAEF,IAAK,IACL,IAAK,IACL,IAAK,MACL,IAAK,MACC,KAAOlE,GAAa,IAAMA,EAC5BgE,EAAqBE,QAAU,QACtB,IAAMlE,EACfgE,EAAqBE,QAAU,SAE/BF,EAAqBC,WAAY,EACjCD,EAAqBG,MAAQ,cAC7BH,EAAqBE,QAAU,OAQrC,OAAOF,G,EAGTI,wBAA0B,WAAO,IACvB3D,EAAmB,EAAK5G,MAAxB4G,eACFT,EAAYE,WAAYO,EAAeT,UAAUjH,OAEjDsL,EAAuB,CAACJ,WAAW,EAAMC,QAAS,IAExD,GAAI,MAAQzD,EAAekB,KAAK5I,MAC9B,OAAO0H,EAAekD,QAAQ5K,OAC5B,IAAK,IACL,IAAK,IACL,IAAK,MACL,IAAK,MACC,IAAOiH,GAAa,IAAMA,EAC5BqE,EAAqBH,QAAU,MACrB,IAAMlE,EAChBqE,EAAqBH,QAAU,OACrB,IAAMlE,EAChBqE,EAAqBH,QAAU,OACtB,IAAMlE,EACfqE,EAAqBH,QAAU,OACtB,IAAMlE,EACfqE,EAAqBH,QAAU,OACrB,KAAOlE,EACjBqE,EAAqBH,QAAU,OACrB,KAAOlE,EACjBqE,EAAqBH,QAAU,QAE/BG,EAAqBJ,WAAY,EACjCI,EAAqBF,MAAQ,eAC7BE,EAAqBH,QAAU,OAEjC,MAEF,IAAK,IACL,IAAK,IACL,IAAK,MACL,IAAK,MACC,MAASlE,GAAa,IAAMA,EAC9BqE,EAAqBH,QAAU,MACrB,IAAMlE,EAChBqE,EAAqBH,QAAU,MACrB,IAAMlE,EAChBqE,EAAqBH,QAAU,OACrB,IAAMlE,EAChBqE,EAAqBH,QAAU,QAE/BG,EAAqBJ,WAAY,EACjCI,EAAqBF,MAAQ,gBAC7BE,EAAqBH,QAAU,YAOhC,GAAI,MAAQzD,EAAekB,KAAK5I,MACrC,OAAO0H,EAAekD,QAAQ5K,OAC5B,IAAK,IACL,IAAK,IACL,IAAK,MACL,IAAK,MACC,GAAKiH,GAAa,IAAMA,EAC1BqE,EAAqBH,QAAU,OACrB,IAAMlE,EAChBqE,EAAqBH,QAAU,OACrB,IAAMlE,EAChBqE,EAAqBH,QAAU,OACrB,KAAOlE,EACjBqE,EAAqBH,QAAU,OACrB,KAAOlE,EACjBqE,EAAqBH,QAAU,QAE/BG,EAAqBJ,WAAY,EACjCI,EAAqBF,MAAQ,aAC7BE,EAAqBH,QAAU,OAEjC,MAEF,IAAK,IACC,GAAKlE,GAAa,IAAMA,EAC1BqE,EAAqBH,QAAU,OACrB,IAAMlE,EAChBqE,EAAqBH,QAAU,OACtB,KAAOlE,EAChBqE,EAAqBH,QAAU,QAE/BG,EAAqBJ,WAAY,EACjCI,EAAqBF,MAAQ,aAC7BE,EAAqBH,QAAU,OASvC,OAAOG,G,EAGT5F,aAAe,SAAC1F,GAAW,IAAD,EACyB,EAAKc,MAA9C4G,EADgB,EAChBA,eAAgB9B,EADA,EACAA,qBAEpB2F,GAAQ,EACZA,GAAW,EAAI7D,EAAekD,QAAQ5K,MAAM6E,QAAQ,KAEpDmB,QAAQwF,QAGR,IAAIC,EAAgB,GACpB,OAAOzL,GAEL,IAAK,KACH,OAAO0H,EAAekD,QAAQ9E,OAC5B,IAAK,YACHyF,GAAQ,EACRE,EAAgB,CAACzL,MAAO,IAAK8F,MAAO,aACpC,MAEF,IAAK,YACHyF,GAAQ,EACRE,EAAgB,CAACzL,MAAO,IAAK8F,MAAO,aAMxC,MAGF,IAAK,KACH,OAAO4B,EAAekD,QAAQ9E,OAC5B,IAAK,YACHyF,GAAQ,EACRE,EAAgB,CAACzL,MAAO,IAAK8F,MAAO,aACpC,MAEF,IAAK,YACHyF,GAAQ,EACRE,EAAgB,CAACzL,MAAO,IAAK8F,MAAO,aAKxC,MAEF,IAAK,KACL,IAAK,KACH,OAAO4B,EAAekD,QAAQ9E,OAC5B,IAAK,YACHyF,GAAQ,EACRE,EAAgB,CAACzL,MAAO,IAAK8F,MAAO,aACpC,MAEF,IAAK,YACHyF,GAAQ,EACRE,EAAgB,CAACzL,MAAO,IAAK8F,MAAO,aAKxC,MAoBF,SACO,EAAI4B,EAAekD,QAAQ5K,MAAM6E,QAAQ,MAC5CmB,QAAQC,IAAI,gFAAgFjG,EAAM,0BAAuB0H,EAAekD,QAAQ9E,MAAQ,KAAO4B,EAAekD,QAAQ5K,MAAQ,sBAAmB0H,EAAe4B,OAAOxD,MAAQ,IAAM9F,EAAQ,6CAA+C0H,EAAekD,QAAQ5K,MAAQ,UAAY0H,EAAe4B,OAAOxD,MAAQ,IAAM9F,EAAQ,MAGzYgG,QAAQC,IAAI,2DAAuDjG,EAAO,mBAAeuL,EAAO,2BAAuBE,GAEvH7F,EAAsB,SAAU,CAAC5F,MAAOA,EAAO8F,MAAO4B,EAAe4B,OAAOxD,QACzC,qBAAxB2F,EAAczL,OACvB4F,EAAsB,UAAW6F,I,EAGrCC,YAAc,SAACd,GAAa,IAClBlD,EAAmB,EAAK5G,MAAxB4G,eACF4B,EAAS5B,EAAe4B,OAAOtJ,MACrCgG,QAAQC,IAAI,6CACZD,QAAQC,IAAI,mBAAe2E,GAC3B5E,QAAQC,IAAI,kBAAcqD,GAE1B,IAAIqC,EAAkB,GACtB,OAAOjE,EAAekB,KAAK5I,OACzB,IAAK,IACH2L,EAAkB,CAAC,KAAK,MACxB,MAEF,QACEA,EAAkB,CAAC,KAAK,KAAK,MAEjC,IAAIA,EAAgBC,SAAStC,GAA7B,CAGA,GAAI,MAAQA,EAAOI,UAAU,EAAE,GAC7B,OACI,yBAAK5B,UAAU,yBACb,qDACA,kBAAC,aAAD,CAAYjE,KAAK,iBAAiBC,cAAewF,EAAQvF,SAAU,EAAK2B,cACtE,yBAAKoC,UAAU,kBACb,yBAAKA,UAAU,UACb,2BAAOrB,QAAQ,YAAf,0CAEF,yBAAKqB,UAAU,SAAQ,kBAAC,QAAD,CAAO9H,MAAM,KAAKuI,GAAG,eAE9C,yBAAKT,UAAU,kBACb,yBAAKA,UAAU,UACb,2BAAOrB,QAAQ,cAAf,0CAEF,yBAAKqB,UAAU,SAAQ,kBAAC,QAAD,CAAO9H,MAAM,KAAKuI,GAAG,iBAE5C,MAAQb,EAAekD,QAAQ5K,OACjC,yBAAK8H,UAAU,kBACb,yBAAKA,UAAU,UACb,2BAAOrB,QAAQ,kBAAf,yCAEF,yBAAKqB,UAAU,SAAQ,kBAAC,QAAD,CAAO9H,MAAM,KAAKuI,GAAG,uBAQxD,IAAK,EAAIe,EAAOzE,QAAQ,QAAU,EAAIyE,EAAOzE,QAAQ,MACnD,OACI,yBAAKiD,UAAU,yBACb,qDACA,kBAAC,aAAD,CAAYjE,KAAK,iBAAiBC,cAAewF,EAAQvF,SAAU,EAAK2B,cACtE,yBAAKoC,UAAU,kBACb,yBAAKA,UAAU,UACb,2BAAOrB,QAAQ,YAAf,0CAEF,yBAAKqB,UAAU,SAAQ,kBAAC,QAAD,CAAO9H,MAAM,KAAKuI,GAAG,eAE9C,yBAAKT,UAAU,kBACb,yBAAKA,UAAU,UACb,2BAAOrB,QAAQ,cAAf,0CAEF,yBAAKqB,UAAU,SAAQ,kBAAC,QAAD,CAAO9H,MAAM,KAAKuI,GAAG,mBAOxD,OAAOqC,GACL,IAAK,IACH,IAAIiB,EAAe,GAEnB,OAAOnE,EAAekB,KAAK5I,OACzB,IAAK,IACH6L,EACE,yBAAK/D,UAAU,yBACb,2CACA,kBAAC,aAAD,CAAYjE,KAAK,iBAAiBC,cAAewF,EAAQvF,SAAU,EAAK2B,cACtE,yBAAKoC,UAAU,kBACb,yBAAKA,UAAU,UACb,2BAAOrB,QAAQ,aAAf,uBAEF,yBAAKqB,UAAU,SAAQ,kBAAC,QAAD,CAAO9H,MAAM,KAAKuI,GAAG,gBAE9C,yBAAKT,UAAU,kBACb,yBAAKA,UAAU,UACb,2BAAOrB,QAAQ,eAAf,uBAEF,yBAAKqB,UAAU,SAAQ,kBAAC,QAAD,CAAO9H,MAAM,KAAKuI,GAAG,oBAKpD,MAEF,IAAK,IACHsD,EACE,yBAAK/D,UAAU,yBACb,2CACA,kBAAC,aAAD,CAAYjE,KAAK,iBAAiBC,cAAewF,EAAQvF,SAAU,EAAK2B,cACtE,yBAAKoC,UAAU,kBACb,yBAAKA,UAAU,UACb,2BAAOrB,QAAQ,aAAf,qCAEF,yBAAKqB,UAAU,SAAQ,kBAAC,QAAD,CAAO9H,MAAM,KAAKuI,GAAG,gBAQ9C,yBAAKT,UAAU,kBACb,yBAAKA,UAAU,UACb,2BAAOrB,QAAQ,oBAAf,oCAEF,yBAAKqB,UAAU,SAAQ,kBAAC,QAAD,CAAO9H,MAAM,KAAKuI,GAAG,yBASxD,OAAOsD,EAET,IAAK,IACL,IAAK,IACL,IAAK,MACL,IAAK,MACL,IAAK,IACL,IAAK,MACL,IAAK,MAEH,GAAI,MAAQnE,EAAekB,KAAK5I,MAC9B,OAEF,IAAMiL,EAAuB,EAAKD,0BAC5BM,EAAuB,EAAKD,0BAC5BS,EAA+D,qBAAjCR,EAAqBH,SAA2B,KAAOG,EAAqBH,QAAW,KAAOG,EAAqBH,QAAU,IAAM,GAEvK,OACE,yBAAKrD,UAAU,yBACb,6CACA,kBAAC,aAAD,CAAYjE,KAAK,iBAAiBC,cAAewF,EAAQvF,SAAU,EAAK2B,cAEtE,yBAAKoC,UAAU,kBACb,yBAAKA,UAAU,SAASC,MAAO,CAACwB,WAAY,WAC1C,2BAAO9C,QAAQ,aAAf,yBACyBqF,IAG3B,yBAAKhE,UAAU,QAAQC,MAAO,CAACwB,WAAY,WACvC+B,EAAqBJ,UACrB,kBAAC,QAAD,CAAOlL,MAAM,KAAKuI,GAAG,cAErB,0BAAMR,MAAO,CAACgE,SAAU,UAAWT,EAAqBF,SAI9D,yBAAKtD,UAAU,kBACb,yBAAKA,UAAU,SAASC,MAAO,CAACwB,WAAY,WAC1C,2BAAO9C,QAAQ,aAAf,2BAAoDwE,EAAqBE,QAAzE,MAEF,yBAAKrD,UAAU,QAAQC,MAAO,CAACwB,WAAY,WACvC0B,EAAqBC,UACrB,kBAAC,QAAD,CAAOlL,MAAM,KAAKuI,GAAG,cAErB,0BAAMR,MAAO,CAACgE,SAAU,UAAWd,EAAqBG,c,wEAcjE,IAEDR,EADqBpH,KAAK1C,MAAxB4G,eACuBkD,QAAQ5K,MAEvC,OACE,yBAAK+H,MAAO,CAACiE,UAAW,SAClBxI,KAAKkI,YAAYd,Q,GAndAlL,aC+DduM,E,2MA5DbvG,aAAe,SAACC,GACdK,QAAQC,IAAI,8DAA0DN,GACtE,EAAK7E,MAAM8E,qBAAqB,UAAUD,I,wEAGnC,IAAD,EACyDnC,KAAK1C,MAA5D4G,EADF,EACEA,eAAgBwE,EADlB,EACkBA,eAAgBvD,EADlC,EACkCA,mBAClCwD,EAAmD,qBAA3BzE,EAAekD,QAA2BlD,EAAekD,QAAQ5K,MAAQ,GAEnG6I,EAAc,KACdhB,EAAkB,KAClB,IAAMqE,EAAe5L,QAAU,MAAQ6L,EAEzCtE,EAAkB,OACT,IAAMqE,EAAe5L,QAAU,EAAI6L,EAAa7L,QAEzDuH,EAAkB,SAClBgB,EAAcnB,EAAekD,SACpB,EAAIsB,EAAe5L,QAAU,MAAQ6L,GAGrC,EAAID,EAAe5L,QAAU,MAAQ6L,GAAgB,EAAIA,EAAa7L,SAE/EuI,EAAcnB,EAAekD,SAG/B,IAAM9B,EAAe,CACnBC,QAAS,SAAAnB,GAAM,sBAASA,EAAT,CAAiBC,gBAAiBA,MAGnD,OACE,6BACE,2BAAOpB,QAAQ,WAAf,WACA,kBAAC,IAAD,CACE5C,KAAK,UACL7D,MAAO6I,EACPnC,aAAW,EACXuC,UAAWN,EACX5E,SAAUP,KAAKkC,aACfiB,YAAY,aACZwC,SAAS,QACTvC,QAASsF,EACTtE,OAAQkB,IAO0B,qBAA3BpB,EAAekD,SACrB,IAAMlD,EAAekD,QAAQ5K,MAAMM,QACnC,MAAQoH,EAAekD,QAAQ5K,OAC/B,MAAQ0H,EAAe7B,aAAa7F,QAClC,MAAQ0H,EAAekB,KAAK5I,OAAS,MAAQ0H,EAAekB,KAAK5I,OAAS,MAAQ0H,EAAekB,KAAK5I,QACxG,kBAAC,EAAD,CAAgB0H,eAAgBA,EAAgB9B,qBAAsBpC,KAAK1C,MAAM8E,4B,GAxDhElG,aC4Hb0M,E,2MA3Hb1G,aAAe,SAAC2G,GAAuB,IAAD,EACa,EAAKvL,MAA9C4G,EAD4B,EAC5BA,eAAgB9B,EADY,EACZA,qBAGxBI,QAAQC,IAAI,uBAAwBoG,GAEpC,GAAI,MAAQ3E,EAAe7B,aAAa7F,MACtC,OAAQ0H,EAAekB,KAAK5I,OAC1B,IAAK,IACL,IAAK,IACL,IAAK,IACC,iBAAmB0H,EAAe4B,OAAOxD,OAO3CF,EAAsB,SAAU,CAAE5F,MAN9B,OAASqM,EACK,MAAQA,EAAkBrM,MAAS,IAAM,IAGzC,MAAQ0H,EAAekB,KAAK5I,MAAS,QAAU,MAEX,MAAS,iBAAkB,GAEnF,MAEF,IAAK,IACL,IAAK,IACH,OAAQ0H,EAAe4B,OAAOxD,OAC5B,IAAK,eACHF,EAAsB,SAAU,CAAE5F,MAAO,IAAK,MAAS,iBAAkB,GACrE,MAAQ0H,EAAekB,KAAK5I,OAC9B4F,EAAsB,QAAS,CAAE5F,MAAO,IAAK,MAAS,oBAAqB,GAC7E,MAEF,IAAK,QAIH,GAAI,OAASqM,IAAsB,EAAIA,EAAkBvG,MAAMjB,QAAQ,OAAQ,CAC7E,IAAMyH,EAAsBD,EAAkBvG,MAAMyG,MAAM,KACpDC,EAAiBrF,WAAYmF,EAAoB,IAavD1G,EAAsB,SAAU,CAAE5F,OAHX,MAAQ0H,EAAekB,KAAK5I,MAAS,IAAO,KAEnCmH,WAAYqF,GAAoB,IAAM,IAChB,MAAS,UAAW,QACjE,OAASH,GAClBzG,EAAsB,SAAU,CAAE5F,MAAO,MAAO,MAAS,UAAW,GAO1E,MAEF,IAAK,IACH,OAAQ0H,EAAe4B,OAAOxD,OAC5B,IAAK,eACHF,EAAsB,SAAU,CAAE5F,MAAO,IAAK,MAAS,iBAAkB,GACzE,MAEF,IAAK,QACH4F,EAAsB,QAAS,CAAE5F,MAAO,IAAK,MAAS,oBAAqB,IAYrF4F,EAAsB,YAAayG,I,wEAG5B,IAAD,EAC2D7I,KAAK1C,MAA9D4G,EADF,EACEA,eAAgB+E,EADlB,EACkBA,iBAAkB9D,EADpC,EACoCA,mBACtC+D,EAAsD,qBAA7BhF,EAAeiF,UAA4BjF,EAAeiF,UAAU3M,MAAQ,GAErG6I,EAAc,KACdhB,EAAkB,KAClB,IAAM4E,EAAiBnM,QAAU,MAAQoM,EAC3C7E,EAAkB,OACT,IAAM4E,EAAiBnM,QAAU,EAAIoM,EAAepM,QAC7DuH,EAAkB,SAClBgB,EAAcnB,EAAeiF,WACpB,EAAIF,EAAiBnM,QAAU,MAAQoM,GAEvC,EAAID,EAAiBnM,QAAU,MAAQoM,GAAkB,EAAIA,EAAepM,SACrFuI,EAAcnB,EAAeiF,WAG/B,IAAM7D,EAAe,CACnBC,QAAS,SAAAnB,GAAM,sBAASA,EAAT,CAAiBC,gBAAiBA,MAGnD,OACE,6BACE,2BAAOpB,QAAQ,aAAf,aACA,kBAAC,IAAD,CACE5C,KAAK,YACL7D,MAAO6I,EACPnC,aAAW,EACXuC,UAAWN,EACX5E,SAAUP,KAAKkC,aACfiB,YAAY,eACZwC,SAAS,QACTvC,QAAS6F,EACT7E,OAAQkB,S,GAtHYpJ,aCmCfkN,E,2MAjCblH,aAAe,SAACC,GACd,EAAK7E,MAAM8E,qBAAqB,OAAOD,I,wEAGhC,IAAD,EACsDnC,KAAK1C,MAAzD4G,EADF,EACEA,eAAgBmF,EADlB,EACkBA,YAAalE,EAD/B,EAC+BA,mBAE/BmE,EAA4C,qBAAxBpF,EAAeqF,KAAuBrF,EAAeqF,KAAK/M,MAAQ,GACxF6I,EAAc,KAOlB,MANI,MAAQiE,GAED,MAAQA,GAAa,EAAIA,EAAUxM,SAC5CuI,EAAcnB,EAAeqF,MAI7B,6BACE,2BAAOtG,QAAQ,QAAf,QACA,kBAAC,IAAD,CACE5C,KAAK,OACL7D,MAAO6I,EACPnC,aAAW,EACXuC,UAAWN,EACX5E,SAAUP,KAAKkC,aACfiB,YAAY,UACZwC,SAAS,QACTvC,QAASiG,S,GA5BMnN,aCuDVsN,E,YArDb,aAAc,IAAD,8BACX,+CAMFtH,aAAe,SAACC,GACd,EAAK2B,SACH,CAAC2F,kBAAmBtH,IACpB,kBAAM,EAAK7E,MAAM8E,qBAAqB,SAASD,OARjD,EAAK8B,MAAQ,CACXwF,kBAAmB,IAHV,E,sEAcJ,IAAD,EACwDzJ,KAAK1C,MAA3D4G,EADF,EACEA,eAAgBwF,EADlB,EACkBA,cAAevE,EADjC,EACiCA,mBACnCwE,EAAgD,qBAA1BzF,EAAe0F,OAAyB1F,EAAe0F,OAAOpN,MAAQ,GAE5F6I,EAAc,KACdhB,EAAkB,KAClB,IAAMqF,EAAc5M,QAAU,MAAQ6M,EACxCtF,EAAkB,OACR,IAAMqF,EAAc5M,QAAU,EAAI6M,EAAY7M,QACxDuH,EAAkB,SAClBgB,EAAcnB,EAAe0F,QACnB,EAAIF,EAAc5M,QAAU,MAAQ6M,GAErC,EAAID,EAAc5M,QAAU,MAAQ6M,GAAe,EAAIA,EAAY7M,SAC5EuI,EAAcnB,EAAe0F,QAG/B,IAAMtE,EAAe,CACnBC,QAAS,SAAAnB,GAAM,sBAASA,EAAT,CAAiBC,gBAAiBA,MAGnD,OACE,6BACE,2BAAOpB,QAAQ,UAAf,WACA,kBAAC,IAAD,CACE5C,KAAK,SACL7D,MAAO6I,EACPnC,aAAW,EACXuC,UAAWN,EACX5E,SAAUP,KAAKkC,aACfiB,YAAY,aACZC,QAASsG,EACTtF,OAAQkB,S,GAhDSpJ,aCyLZ2N,E,YAvLb,aAAc,IAAD,8BACX,+CACK3B,YAAc,EAAKA,YAAYxH,KAAjB,gBACnB,EAAKwB,aAAe,EAAKA,aAAaxB,KAAlB,gBAHT,E,0EAMAlE,GACX,OAAOwD,KAAK1C,MAAM4G,eAAe7B,aAAa7F,OAC5C,IAAK,IACH,IAAMsN,EAAc,GAAKtN,EAAM6E,QAAQ,MAAS,CAAE7E,MAAOA,EAAO8F,MAAO,cAAiB,CAAE9F,MAAOA,EAAO8F,MAAO,cAC/GtC,KAAK1C,MAAM8E,qBAAqB,OAAO0H,GACvC,MAEF,QACE9J,KAAK1C,MAAM8E,qBAAqB,iBAAiB5F,M,kCAI3C4I,EAAKe,GAEf,OAAOf,GAEL,IAAK,UACL,IAAK,MACL,IAAK,MACH,OACE,yBAAKd,UAAU,yBACb,4DACA,kBAAC,aAAD,CAAYjE,KAAK,iBAAiBC,cAAe6F,EAAgB5F,SAAUP,KAAKkC,cAC9E,yBAAKoC,UAAU,OACb,yBAAKA,UAAU,YAAW,+BAAO,kBAAC,QAAD,CAAO9H,MAAM,MAAMuI,GAAG,QAA7B,WAC1B,yBAAKT,UAAU,YAAW,+BAAO,kBAAC,QAAD,CAAO9H,MAAM,MAAMuI,GAAG,QAA7B,cAMpC,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,cACL,IAAK,cACL,IAAK,cACL,IAAK,cACL,IAAK,cACL,IAAK,cAEH,OACE,yBAAKT,UAAU,yBACb,mCACA,kBAAC,aAAD,CAAYjE,KAAK,OAAOC,cAAe8E,EAAM7E,SAAUP,KAAKkC,cAC1D,yBAAKoC,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAOrB,QAAQ,UAAf,yBAEF,yBAAKqB,UAAU,SAAQ,kBAAC,QAAD,CAAO9H,MAAM,MAAMuI,GAAG,aAE/C,yBAAKT,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAOrB,QAAQ,UAAf,wBAEF,yBAAKqB,UAAU,SAAQ,kBAAC,QAAD,CAAO9H,MAAM,MAAMuI,GAAG,eAMvD,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACH,OACE,2BAAOnE,KAAK,SAASP,KAAK,iBAAiB7D,MAAO2J,IAEtD,IAAK,MACL,IAAK,MACH,OAAO,EACT,IAAK,IACH,OACE,yBAAK7B,UAAU,yBACb,4DACA,kBAAC,aAAD,CAAYjE,KAAK,iBAAiBC,cAAe6F,EAAgB5F,SAAUP,KAAKkC,cAC9E,yBAAKoC,UAAU,OACb,yBAAKA,UAAU,UACb,2BAAOrB,QAAQ,WAAf,yCAEF,yBAAKqB,UAAU,SAAQ,kBAAC,QAAD,CAAO9H,MAAM,KAAKuI,GAAG,cAE9C,yBAAKT,UAAU,OACb,yBAAKA,UAAU,UACb,2BAAOrB,QAAQ,WAAf,wCAEF,yBAAKqB,UAAU,SAAQ,kBAAC,QAAD,CAAO9H,MAAM,KAAKuI,GAAG,gBAMtD,IAAK,IACH,OACE,yBAAKT,UAAU,yBACb,4DACA,kBAAC,aAAD,CAAYjE,KAAK,iBAAiBC,cAAe6F,EAAgB5F,SAAUP,KAAKkC,cAC9E,yBAAKoC,UAAU,OACb,yBAAKA,UAAU,UAAS,2BAAOrB,QAAQ,WAAf,uCACxB,yBAAKqB,UAAU,SAAQ,kBAAC,QAAD,CAAO9H,MAAM,KAAKuI,GAAG,cAE9C,yBAAKT,UAAU,OACb,yBAAKA,UAAU,UAAS,2BAAOrB,QAAQ,WAAf,2CACxB,yBAAKqB,UAAU,SAAQ,kBAAC,QAAD,CAAO9H,MAAM,KAAKuI,GAAG,gBAKtD,IAAK,IACH,OACE,yBAAKT,UAAU,yBACb,4DACA,kBAAC,aAAD,CAAYjE,KAAK,iBAAiBC,cAAe6F,EAAgB5F,SAAUP,KAAKkC,cAC9E,yBAAKoC,UAAU,OACb,yBAAKA,UAAU,SAAQ,sEACvB,yBAAKA,UAAU,eAAc,+BAAO,kBAAC,QAAD,CAAO9H,MAAM,OAApB,WAC7B,yBAAK8H,UAAU,eAAc,+BAAO,kBAAC,QAAD,CAAO9H,MAAM,OAApB,YAE/B,yBAAK8H,UAAU,OACb,yBAAKA,UAAU,SAAQ,yEACvB,yBAAKA,UAAU,eAAc,+BAAO,kBAAC,QAAD,CAAO9H,MAAM,OAApB,WAC7B,yBAAK8H,UAAU,eAAc,+BAAO,kBAAC,QAAD,CAAO9H,MAAM,OAApB,cAKvC,IAAK,IACH,OACE,yBAAK8H,UAAU,yBACb,4DACA,kBAAC,aAAD,CAAYjE,KAAK,iBAAiBC,cAAe6F,EAAgB5F,SAAUP,KAAKkC,cAC9E,yBAAKoC,UAAU,OACb,yBAAKA,UAAU,OAAM,2BAAOrB,QAAQ,UAAf,yBACrB,yBAAKqB,UAAU,YAAW,+BAAO,kBAAC,QAAD,CAAO9H,MAAM,KAAKuI,GAAG,WAA5B,YAE5B,yBAAKT,UAAU,OACb,yBAAKA,UAAU,OAAM,2BAAOrB,QAAQ,UAAf,6BAErB,yBAAKqB,UAAU,YAAW,+BAAO,kBAAC,QAAD,CAAO9H,MAAM,KAAKuI,GAAG,WAA5B,cAKpC,IAAK,IACH,OACE,yBAAKT,UAAU,yBACb,4DACA,kBAAC,aAAD,CAAYjE,KAAK,iBAAiBC,cAAe6F,EAAgB5F,SAAUP,KAAKkC,cAC9E,yBAAKoC,UAAU,OACb,yBAAKA,UAAU,OAAM,2BAAOrB,QAAQ,UAAf,yBACrB,yBAAKqB,UAAU,YAAW,+BAAO,kBAAC,QAAD,CAAO9H,MAAM,KAAKuI,GAAG,WAA5B,YAE5B,yBAAKT,UAAU,OACb,yBAAKA,UAAU,OAAM,2BAAOrB,QAAQ,UAAf,6BACrB,yBAAKqB,UAAU,YAAW,+BAAO,kBAAC,QAAD,CAAO9H,MAAM,KAAKuI,GAAG,WAA5B,iB,+BAW/B,IACCb,EAAmBlE,KAAK1C,MAAxB4G,eACFkB,EAAOlB,EAAekB,KAAK5I,MAC3B2J,EAAiBjC,EAAeiC,eAAe3J,MAErD,OACE,6BAAOwD,KAAKkI,YAAY9C,EAAMe,Q,GApLVjK,aCiDX6N,E,2MA/Cb7H,aAAe,SAACC,GACd,EAAK7E,MAAM8E,qBAAsB,QAASD,I,wEAGnC,IAAD,EACmCnC,KAAK1C,MAAtC4G,EADF,EACEA,eAAgB8F,EADlB,EACkBA,aAClBC,EAA8C,qBAAzB/F,EAAegG,MAAwBhG,EAAegG,MAAM1N,MAAQ,GAE3F6I,EAAc,KACdhB,EAAkB,KAClB,IAAM2F,EAAalN,QAAU,MAAQmN,EAEvC5F,EAAkB,OACT,IAAM2F,EAAalN,QAAU,EAAImN,EAAWnN,QAErDuH,EAAkB,SAClBgB,EAAcnB,EAAegG,OACpB,EAAIF,EAAalN,QAAU,MAAQmN,GAGnC,EAAID,EAAalN,QAAU,MAAQmN,GAAc,EAAIA,EAAWnN,SAEzEuI,EAAcnB,EAAegG,OAG/B,IAAM5E,EAAe,CACnBC,QAAS,SAAAnB,GAAM,sBAASA,EAAT,CAAiBC,gBAAiBA,MAGnD,OACE,6BACE,2BAAOpB,QAAQ,SAAf,oBACA,kBAAC,IAAD,CACE5C,KAAK,QACL7D,MAAO6I,EACP9E,SAAUP,KAAKkC,aACfiB,YAAY,gBACZwC,SAAS,QACTvC,QAAS4G,EACT5F,OAAQkB,EACRpC,aAAW,S,GA1CIhH,aCsLViO,E,iLAtKJ,IAAD,EAC4EnK,KAAK1C,MAA/E4G,EADF,EACEA,eAAgB9B,EADlB,EACkBA,qBAAsBgI,EADxC,EACwCA,YAAajF,EADrD,EACqDA,mBACrDD,EjBIH,SAAyBhB,GAC9B,IAAMgB,EAAc,CAClBmF,SAAS,EACTC,oBAAoB,GAGtB,MAAmC,qBAAxBpG,EAAekB,KACjBF,GAIPqF,IAAeC,MAAMpC,SAASlE,EAAe7B,aAAa7F,QACvD+N,IAAeE,MAAMrC,SAASlE,EAAekB,KAAK5I,SAC9C,MAAQ0H,EAAe7B,aAAa7F,OAAS,QAAU0H,EAAec,eAAexI,SAE5F0I,EAAYmF,SAAU,GAItB,MAAQnG,EAAe7B,aAAa7F,OACjC,MAAQ0H,EAAekB,KAAK5I,QAE/B0I,EAAYoF,oBAAqB,GAE5BpF,GiB5BewF,CAAgBxG,GAUpC,OACE,yBAAKI,UAAU,2BACb,yBAAKA,UAAU,WAAWC,MAAO,CAACiE,UAAW,SACb,qBAArB4B,EAAYhF,MACrB,yBAAKd,UAAU,cAAcC,MAAO,CAACiB,SAAU,UAC7C,yBAAKlB,UAAU,kBACb,yBAAKA,UAAU,OACb,kBAAC,EAAD,CACEJ,eAAgBA,EAChB9B,qBAAsBA,EACtB8C,YAAakF,EAAYhF,KACzBD,mBAAoBA,MAGpBD,EAAYmF,SAAWnF,EAAYoF,qBAClC,yBAAKhG,UAAU,WAAWC,MAAO,CAACoG,YAAa,SAChD,0CACEzF,EAAYmF,SACT,kBAAC,EAAD,CAASnG,eAAgBA,EAAgB9B,qBAAsBA,IAClE8C,EAAYoF,oBACT,kBAAC,EAAD,CAAoBpG,eAAgBA,EAAgB9B,qBAAsBA,MAcpD,qBAAxB8B,EAAekB,MACnB,IAAMlB,EAAekB,KAAK5I,MAAMM,SAC/B,MAAQoH,EAAe7B,aAAa7F,OAAS,MAAQ0H,EAAe7B,aAAa7F,QAClF,yBAAK8H,UAAU,MAAMC,MAAO,CAACiE,UAAW,SAAS,yBAAKlE,UAAU,OAAM,kBAAC,EAAD,CAAaJ,eAAgBA,EAAgB9B,qBAAsBA,OAG3G,qBAA5BgI,EAAY5D,aAA+B,MAAQtC,EAAe7B,aAAa7F,OACxF,yBAAK8H,UAAU,UACb,kBAAC,EAAD,CACEJ,eAAgBA,EAChB9B,qBAAsBA,EACtBkE,kBAAmB8D,EAAY5D,YAC/BrB,mBAAoBA,KAIW,qBAA1BiF,EAAYxD,YAA8B,MAAQ1C,EAAe7B,aAAa7F,OAAS,MAAQ0H,EAAe7B,aAAa7F,QACpI,yBAAK8H,UAAU,UACb,kBAAC,EAAD,CACEJ,eAAgBA,EAChB9B,qBAAsBA,EACtBuE,iBAAkByD,EAAYxD,UAC9BzB,mBAAoBA,KAIQ,qBAAvBiF,EAAYtE,SACjB,MAAQ5B,EAAe7B,aAAa7F,OAAS,MAAQ0H,EAAe7B,aAAa7F,OAAS,MAAQ0H,EAAe7B,aAAa7F,QAClI,yBAAK8H,UAAU,UACb,kBAAC,EAAD,CACEJ,eAAgBA,EAChB9B,qBAAsBA,EACtBiF,cAAe+C,EAAYtE,OAC3BX,mBAAoBA,KAIS,qBAAxBiF,EAAYhD,UACd,MAAQlD,EAAe7B,aAAa7F,OACpC,MAAQ0H,EAAe7B,aAAa7F,OACpC,MAAQ0H,EAAe7B,aAAa7F,OACpC,MAAQ0H,EAAe7B,aAAa7F,QAC3C,yBAAK8H,UAAU,cAAcC,MAAO,CAACiB,SAAU,UAC7C,kBAAC,EAAD,CACEtB,eAAgBA,EAChB9B,qBAAsBA,EACtBsG,eAAgB0B,EAAYhD,QAC5BjC,mBAAoBA,KAIQ,qBAAvBiF,EAAYnD,QAA0B,MAAQ/C,EAAe7B,aAAa7F,OACnF,yBAAK8H,UAAU,UACb,kBAAC,EAAD,CACEJ,eAAgBA,EAChB9B,qBAAsBA,EACtB2E,cAAeqD,EAAYnD,OAC3B9B,mBAAoBA,KAIW,qBAA1BiF,EAAYjB,WACrB,yBAAK7E,UAAU,UACb,kBAAC,EAAD,CACEJ,eAAgBA,EAChB9B,qBAAsBA,EACtB6G,iBAAkBmB,EAAYjB,UAC9BhE,mBAAoBA,KAIM,qBAArBiF,EAAYb,OAAyB,MAAQrF,EAAe7B,aAAa7F,OAAS,MAAQ0H,EAAe7B,aAAa7F,QAC/H,yBAAK8H,UAAU,UACb,kBAAC,EAAD,CACEJ,eAAgBA,EAChB9B,qBAAsBA,EACtBiH,YAAae,EAAYb,KACzBpE,mBAAoBA,KAIQ,qBAAvBiF,EAAYR,QACrB,yBAAKtF,UAAU,UACb,kBAAC,EAAD,CACEJ,eAAgBA,EAChB9B,qBAAsBA,EACtBsH,cAAeU,EAAYR,OAC3BzE,mBAAoBA,KAIO,qBAAtBiF,EAAYF,OACnB,MAAQhG,EAAe7B,aAAa7F,OACtC,yBAAK8H,UAAU,UACb,kBAAC,EAAD,CACEJ,eAAgBA,EAChB9B,qBAAsBA,EACtB4H,aAAcI,EAAYF,MAC1B/E,mBAAoBA,MAKe,qBAAhCjB,EAAe7B,cACnB,MAAQ6B,EAAe7B,aAAa7F,OACH,qBAA1B0H,EAAe4B,QACtB,iBAAmB5B,EAAe4B,OAAOxD,OACL,qBAA7B4B,EAAeiF,WACtB,KAAOjF,EAAeiF,UAAU3M,OAChC,MAAQ0H,EAAeiF,UAAU3M,OACjC,MAAQ0H,EAAeiF,UAAU3M,OACF,qBAAxB0H,EAAekB,MACtB,MAAQlB,EAAekB,KAAK5I,OAC5B,kBAAC,EAAD,CAAqB0H,eAAgBA,EAAgB9B,qBAAsBA,S,GAhKpDlG,a,2BCqKrB0O,E,YAzKb,WAAYtN,GAAO,IAAD,uBAChB,4CAAMA,KAPR2G,MAAQ,CACN4G,sBAAuB,KACvBC,uBAAwB,KACxBC,eAAgB,IAGA,EAiClBC,iBAAmB,SAAChO,EAAIiO,GAAgB,IAC9B/G,EAAmB,EAAK5G,MAAxB4G,eACA6G,EAAmB,EAAK9G,MAAxB8G,eACJG,EAAc,KACd5I,EAAQ2I,EAAW3I,MACnB6I,EAAoD,qBAA5BF,EAAWG,aAAgCzH,WAAYsH,EAAWG,cAAiB/O,OAAO+E,KAAK8C,GAAgBpH,OAAS,EACpJ,OAAOE,GACL,IAAK,+BACHkO,EAAc,yBAAKG,IAAKJ,EAAWzO,MAAO+H,MAAO,CAAC+G,SAAU,QAASC,IAAI,SACzE,MAEF,IAAK,iBACHL,EAAc,uBAAGM,KAAMP,EAAWzO,OAApB,6BACd,MAEF,IAAK,cACL,IAAK,SACL,IAAK,eACL,IAAK,iBACL,IAAK,YAEH,MAEF,IAAK,SACH2O,EAAe,EACf7I,EAAQ,UACR4I,EAAcD,EAAW3I,MACzB,MAEF,IAAK,eACH6I,EAAe,EACf7I,EAAQ,eACR4I,EAAchH,EAAe7B,aAAaC,MAAQ,IAAM4B,EAAeT,UAAUjH,MAAQ0H,EAAec,eAAe1C,MAAQ,MAAQ4B,EAAeuH,aAAanJ,MACnK,MAEF,IAAK,SACH6I,EAAe,EACf7I,EAAQtF,EAAI0O,OAAO,GAAGC,cAAgB3O,EAAI4O,MAAM,GAChDV,EAAe,OAASD,EAAW3I,MAAQ,kBAAoB2I,EAAW3I,MAC1E,MAEF,IAAK,OACL,IAAK,YACL,IAAK,YACL,IAAK,UACL,IAAK,OACC,cAAgBtF,IAAMmO,EAAe,GACrC,SAAWnO,IAAMmO,EAAe,GAChC,WAAanO,IAAMmO,EAAe,GAClC,YAAcnO,IAAMmO,EAAe,GACnC,cAAgBnO,IAAMmO,EAAe,GACrC,SAAWnO,IAAMmO,EAAe,GACpC7I,EAAQtF,EAAI0O,OAAO,GAAGC,cAAgB3O,EAAI4O,MAAM,GAChDV,EAAcD,EAAW3I,MACzB,MAEF,IAAK,YAEH,YADAyI,EAAe,MAAQ,wBAAI/N,IAAK,MAAM,wBAAI6O,MAAM,OAAV,gBAAiC,2FAGzE,QACE,GAAI,KAAOZ,EAAW3I,MAEpB,YADAE,QAAQC,IAAR,yEAAoEwI,EAAWzO,MAA/E,8EAIF0O,EAAcD,EAAWzO,MAGzB,OAAS0O,GAAe,KAAOA,IACjCH,EAAeI,GAAgB,wBAAInO,IAAKA,GAAK,wBAAI6O,MAAM,MAAMtH,MAAO,CAACwB,WAAY,WAAYzD,GAAW,4BAAK4I,MAvG/F,EA0GlBY,YAAc,SAACvI,GAAO,IAAD,EACuC,EAAKjG,MAAvDyO,EADW,EACXA,KAAM7H,EADK,EACLA,eAAgB8H,EADX,EACWA,QAASC,EADpB,EACoBA,eACnCD,EACoC,qBAA3B9H,EAAegI,SAA2BhI,EAAevC,OAAOnF,QAAUuP,EAAK7H,EAAegI,SAASvK,OAAOnF,MACvHyP,EAAe,kBAEfA,EAAe,gBAGjB,EAAK3O,MAAM6O,WAAW,MAAM,KAnHd,IAERjI,EAAmB,EAAK5G,MAAxB4G,eAFQ,OAGhB7H,OAAO+E,KAAK8C,GAAgBkI,KAAK,SAAApP,GAAG,OAAI,EAAKgO,iBAAiBhO,EAAIkH,EAAelH,OAHjE,E,iFAUE,IAAD,OACTkH,EAAmBlE,KAAK1C,MAAxB4G,eACFmI,EAAQ,UAAMC,IAAN,oBAAkCpI,EAAevC,OAAOW,OAEtEE,QAAQC,IAAR,gEAAmE4J,GAEnEE,IACG5N,IAAI0N,GACJG,MAAM,SAAAC,GACL,IAAMC,EAAoBD,EAASE,KAAKA,KACxCnK,QAAQC,IAAR,iGAAyGiK,GAErG,OAASA,GACXrQ,OAAO+E,KAAKsL,GAAmBN,KAAK,SAAApP,GAAG,OAAI,EAAKgO,iBAAiBhO,EAAI0P,EAAkB1P,OACvF,EAAK8G,SAAS,CAAC+G,sBAAuB6B,EAAmB5B,wBAAwB,MAEjF,EAAKE,iBAAiB,YAAY,CAAC1I,MAAO,qBAAsB9F,MAAO,mEACvE,EAAKsH,SAAS,CAACgH,wBAAwB,QAG1C8B,OAAO,SAAAC,GAAK,OAAIrK,QAAQC,IAAIoK,Q,+BAyFxB,IAAD,SACoC7M,KAAK1C,MAAvCyO,EADF,EACEA,KAAM7H,EADR,EACQA,eAAgB8H,EADxB,EACwBA,QAC1Bc,EAAa,eAOjB,MANsC,qBAA3B5I,EAAegI,SAA2BhI,EAAevC,OAAOnF,QAAUuP,EAAK7H,EAAegI,SAASvK,OAAOnF,MACvHsQ,EAAa,cACLd,IACRc,EAAa,kBAIb,yBAAKxI,UAAU,gBACb,6BACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,gDAEF,yBAAKA,UAAU,oBACb,4BAAQ1D,KAAK,SAAS0D,UAAU,kBAAkByI,QAAS/M,KAAK8L,aAAcgB,KAGlF,yBAAKxI,UAAU,OACb,yBAAKA,UAAU,YACb,2BAAOrB,QAAQ,IAAf,SAA+B,6BAC9BiB,EAAevC,OAAOW,OAEzB,yBAAKgC,UAAU,YACb,2BAAOrB,QAAQ,IAAf,WACA,2BAAOqB,UAAU,gCACf,kCACE,8BACA,yBAAKC,MAAO,CAACyI,MAAO,WAEtB,+BACyC,IAArChN,KAAKiE,MAAM8G,eAAejO,QAC1BT,OAAO+E,KAAKpB,KAAKiE,MAAM8G,gBAAgBqB,KAAK,SAAApP,GAAG,OAAI,EAAKiH,MAAM8G,eAAe/N,UAKvF,6BACA,yBAAKsH,UAAU,OACb,yBAAKA,UAAU,wBACb,4BAAQ1D,KAAK,SAAS0D,UAAU,kBAAkByI,QAAS/M,KAAK8L,aAAcgB,U,GAzKhE5Q,aCGpB+Q,E,2MAOJ/K,aAAe,SAACqB,GACVZ,OAAOmC,QAAQ,wEACjB,EAAKxH,MAAM8E,qBAAqBmB,EAAE5G,OAAO0D,KAAK,CAAC7D,MAAO+G,EAAE5G,OAAOH,MAAO8F,MAAOiB,EAAE5G,OAAOH,S,wEAGjF,IAAD,SACuEwD,KAAK1C,MAA1EyO,EADF,EACEA,KAAM7H,EADR,EACQA,eAAgB8H,EADxB,EACwBA,QAAS5B,EADjC,EACiCA,YAAahI,EAD9C,EAC8CA,qBAEpD,OACE,yBAAKkC,UAAU,gBACb,0BAAM4I,IAAK,SAAAC,GAAI,OAAI,EAAKA,KAAOA,IAC7B,yBAAK7I,UAAU,YACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,CACExB,YAAa9C,KAAK1C,MAAMwF,YACxBT,aAAc6B,EAAe7B,aAC7BD,qBAAsBpC,KAAK1C,MAAM8E,qBACjCW,QAAS/C,KAAK1C,MAAMyF,WAGxB,yBAAKuB,UAAU,YACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,0BACb,kBAAC,EAAD,CACElC,qBAAsBpC,KAAK1C,MAAM8E,qBACjC8B,eAAgBA,KAGpB,yBAAKI,UAAU,YACb,kBAAC,EAAD,CACElC,qBAAsBpC,KAAK1C,MAAM8E,qBACjC8B,eAAgBA,KAGpB,yBAAKI,UAAU,YACb,2BAAOA,UAAU,GAAGrB,QAAQ,gBAA5B,gBACA,yBAAKqB,UAAU,cACb,2BAAOA,UAAU,mBAAmB1D,KAAK,QAAQP,KAAK,eAAe0E,GAAG,cAAcvI,MAAM,MAAMiE,QAA6D,QAApDyD,EAAeuH,aAAajP,MAAM4Q,cAAyB7M,SAAUP,KAAKkC,eACrL,2BAAOoC,UAAU,mBAAmBrB,QAAQ,eAA5C,SAIC,MAAQiB,EAAe7B,aAAa7F,OAAS,MAAQ0H,EAAe7B,aAAa7F,QACpF,yBAAK8H,UAAU,cACb,2BAAOA,UAAU,mBAAmB1D,KAAK,QAAQP,KAAK,eAAe0E,GAAG,kBAAkBvI,MAAM,WAAWiE,QAA6D,aAApDyD,EAAeuH,aAAajP,MAAM4Q,cAA8B7M,SAAUP,KAAKkC,eACnM,2BAAOoC,UAAU,mBAAmBrB,QAAQ,mBAA5C,iBAS+B,qBAAhCiB,EAAe7B,cACnB,IAAM6B,EAAe7B,aAAa7F,MAAMM,QACxC,MAAQoH,EAAe7B,aAAa7F,OACvC,kBAAC,EAAD,CACE0H,eAAgBA,EAChB9B,qBAAsBA,EACtBgI,YAAaA,EACbjF,mBAAoBnF,KAAK1C,MAAM6H,qBAEjCnF,KAAK1C,MAAM+P,iBAAiBnJ,IACzB,QAAUoJ,KACb,kBAAC,EAAD,CAAavB,KAAMA,EAAM7H,eAAgBA,EAAgBiI,WAAYnM,KAAK1C,MAAM6O,WAAYF,eAAgBjM,KAAK1C,MAAM2O,eAAgBD,QAASA,U,GAxEjIuB,IAAMrR,WA+ElB+Q","file":"static/js/9.d41ffa1a.chunk.js","sourcesContent":["import '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport '@babel/runtime/helpers/esm/extends';\nimport '@babel/runtime/helpers/esm/toConsumableArray';\nimport '@babel/runtime/helpers/esm/objectSpread';\nimport _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/esm/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/esm/getPrototypeOf';\nimport _inherits from '@babel/runtime/helpers/esm/inherits';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport React, { Component } from 'react';\nimport memoizeOne from 'memoize-one';\nimport { CacheProvider } from '@emotion/core';\nimport 'react-dom';\nimport 'prop-types';\nimport '@babel/runtime/helpers/esm/typeof';\nimport './chunk-39d3fda8.browser.esm.js';\nexport { y as components } from './chunk-80640036.browser.esm.js';\nimport { S as Select } from './base/dist/react-select-cac0a5ae.browser.esm.js';\nexport { c as createFilter, a as defaultTheme, m as mergeStyles } from './base/dist/react-select-cac0a5ae.browser.esm.js';\nimport '@emotion/css';\nimport '@babel/runtime/helpers/esm/taggedTemplateLiteral';\nimport 'react-input-autosize';\nimport { m as manageState } from './chunk-b36baf1a.browser.esm.js';\nimport createCache from '@emotion/cache';\n\nvar NonceProvider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NonceProvider, _Component);\n\n  function NonceProvider(props) {\n    var _this;\n\n    _classCallCheck(this, NonceProvider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NonceProvider).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"createEmotionCache\", function (nonce) {\n      return createCache({\n        nonce: nonce\n      });\n    });\n\n    _this.createEmotionCache = memoizeOne(_this.createEmotionCache);\n    return _this;\n  }\n\n  _createClass(NonceProvider, [{\n    key: \"render\",\n    value: function render() {\n      var emotionCache = this.createEmotionCache(this.props.nonce);\n      return React.createElement(CacheProvider, {\n        value: emotionCache\n      }, this.props.children);\n    }\n  }]);\n\n  return NonceProvider;\n}(Component);\n\nvar index = manageState(Select);\n\nexport default index;\nexport { NonceProvider };\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar Radio = (function (_React$Component) {\n  _inherits(Radio, _React$Component);\n\n  function Radio() {\n    _classCallCheck(this, Radio);\n\n    _get(Object.getPrototypeOf(Radio.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(Radio, [{\n    key: 'render',\n    value: function render() {\n      var _context$radioGroup = this.context.radioGroup;\n      var name = _context$radioGroup.name;\n      var selectedValue = _context$radioGroup.selectedValue;\n      var onChange = _context$radioGroup.onChange;\n\n      var optional = {};\n      if (selectedValue !== undefined) {\n        optional.checked = this.props.value === selectedValue;\n      }\n      if (typeof onChange === 'function') {\n        optional.onChange = onChange.bind(null, this.props.value);\n      }\n\n      return _react2['default'].createElement('input', _extends({}, this.props, {\n        type: 'radio',\n        name: name\n      }, optional));\n    }\n  }]);\n\n  return Radio;\n})(_react2['default'].Component);\n\nexports.Radio = Radio;\n;\n\nRadio.contextTypes = {\n  radioGroup: _propTypes2['default'].object\n};\n\nvar RadioGroup = (function (_React$Component2) {\n  _inherits(RadioGroup, _React$Component2);\n\n  function RadioGroup() {\n    _classCallCheck(this, RadioGroup);\n\n    _get(Object.getPrototypeOf(RadioGroup.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(RadioGroup, [{\n    key: 'getChildContext',\n    value: function getChildContext() {\n      var _props = this.props;\n      var name = _props.name;\n      var selectedValue = _props.selectedValue;\n      var onChange = _props.onChange;\n\n      return {\n        radioGroup: {\n          name: name, selectedValue: selectedValue, onChange: onChange\n        }\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props;\n      var Component = _props2.Component;\n      var name = _props2.name;\n      var selectedValue = _props2.selectedValue;\n      var onChange = _props2.onChange;\n      var children = _props2.children;\n\n      var rest = _objectWithoutProperties(_props2, ['Component', 'name', 'selectedValue', 'onChange', 'children']);\n\n      return _react2['default'].createElement(\n        Component,\n        rest,\n        children\n      );\n    }\n  }]);\n\n  return RadioGroup;\n})(_react2['default'].Component);\n\nexports.RadioGroup = RadioGroup;\n;\n\nRadioGroup.defaultProps = {\n  Component: \"div\"\n};\n\nRadioGroup.propTypes = {\n  name: _propTypes2['default'].string,\n  selectedValue: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number, _propTypes2['default'].bool]),\n  onChange: _propTypes2['default'].func,\n  children: _propTypes2['default'].node.isRequired,\n  Component: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].func, _propTypes2['default'].object])\n};\n\nRadioGroup.childContextTypes = {\n  radioGroup: _propTypes2['default'].object\n};","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport { productTypeOptions } from '../data/data';\n\nclass SelectProductType extends Component{\n\n  handleChange = (selectedOption) => {\n    this.props.updateConfiguredPart('product_type',selectedOption)\n  }\n\n  render(){\n    /**\n     * When we switch to kHz Crystals, the first option changes to\n     * {value: 'K', label: 'Crystal'}, and it stays there when we\n     * reset back to MHz Crystals. The following adjusts the first\n     * option so we can once again select a MHz Crystal:\n     */\n    if( '' === this.props.product_type.label && 'K' === productTypeOptions[0].value ){\n      console.log('🔔 [SelectProductType.js]->render() Resetting productTypeOptions:')\n      productTypeOptions[0] = {value: 'C', label: 'Crystal'}\n      console.log(`• productTypeOptions = `, productTypeOptions)\n    }\n    const selectedValue = ( '' === this.props.product_type.label )? null : this.props.product_type\n    let page = window.location.pathname + 'foxselect/' + this.props.currentView\n    if( null !== selectedValue )\n      page+= '/' + this.props.product_type.label\n    this.props.ReactGA.pageview( page )\n\n    return(\n      <div>\n        <label htmlFor=\"product_type\">Product Type</label>\n        <Select\n          name=\"product_type\"\n          value={selectedValue}\n          isClearable\n          onChange={this.handleChange}\n          placeholder=\"Product type...\"\n          options={productTypeOptions}\n        />\n      </div>\n    );\n  };\n}\n\nexport default SelectProductType;","import React, { Component } from 'react'\nimport { formatFrequency } from '../lib/utilities'\n\nclass InputFrequency extends Component{\n\n  constructor(){\n    super()\n\n    this.state = {\n      frequency: '',\n      hasFocus: false\n    }\n  }\n\n  formatFrequency = (e) => {\n    const formattedFrequency = formatFrequency( e.target.value )\n    this.setState({hasFocus: false, frequency: formattedFrequency},() => {\n      this.props.updateConfiguredPart('frequency',{label: formattedFrequency, value: formattedFrequency })\n    })\n  }\n\n  handleChange = (e) => {\n    console.log('Not updating configuredPart.frequency until this input loses focus.')\n    this.setState({frequency: e.target.value})\n  }\n\n  handleFocus = () => {\n    this.setState({hasFocus: true})\n  }\n\n  render(){\n    const { configuredPart } = this.props\n    let value = ( '_' !== configuredPart.frequency.value && '0.0' !== configuredPart.frequency.value )? configuredPart.frequency.value : ''\n    if( this.state.hasFocus )\n      value = this.state.frequency\n\n    let disabled = false\n    if('32.768' === configuredPart.frequency.value && 'K' === configuredPart.product_type.value ){\n      disabled = true\n    } else if (-1 < configuredPart.product_type.value.indexOf('_')){\n      disabled = true\n    }\n\n    const styles = ( disabled && '32.768' === configuredPart.frequency.value )? {backgroundColor: 'aliceblue'} : {}\n\n\n    return(\n      <div>\n        <label htmlFor=\"frequency\">Frequency</label>\n        <input className=\"form-control\" style={styles} type=\"text\" name=\"frequency\" step=\"any\" min=\"0\" disabled={disabled} value={value} onFocus={this.handleFocus} onChange={this.handleChange} onBlur={this.formatFrequency} />\n      </div>\n    )\n  }\n}\n\nexport default InputFrequency","import { aecq200Options } from '../components/data/data';\n\nexport function formatFrequency( frequency ){\n\n  var floatFreq = parseFloat( frequency )\n  console.log('🔔 [lib/utilities.js] formatFrequency()')\n  console.log(`\\t• Our (floating) frequency is: `, floatFreq)\n\n  floatFreq = floatFreq.toFixed(6)\n  console.log(`\\t• Our (floating) frequency.toFixed(6) is: `, floatFreq)\n  floatFreq = parseFloat( floatFreq ) // convert back to float so we can use toString to remove zeros\n  floatFreq = floatFreq.toString() // remove trailing zeros\n  console.log(`\\t• Our (floating) frequency.toString() is: `, floatFreq)\n\n  // floatFreq is now a `string`, so we can check to see if it has a decimal (i.e. `.`)\n  if( 'NaN' !== floatFreq && -1 === floatFreq.indexOf('.') )\n    floatFreq += '.0'\n  console.log(`\\t• If floatFreq was an interger, we have just added a '.0' to the end. floatFreq = `, floatFreq )\n\n  if( 'NaN' === floatFreq )\n    floatFreq = '0.0'\n\n  return floatFreq\n}\n\nexport function getSizeOptions( configuredPart ){\n  const sizeOptions = {\n    aecq200: false,\n    vibrationResistant: false\n  }\n\n  if( typeof configuredPart.size === 'undefined' )\n    return sizeOptions\n\n  // AEC-Q200 option\n  if(\n    aecq200Options.parts.includes(configuredPart.product_type.value)\n    && aecq200Options.sizes.includes(configuredPart.size.value)\n    && ! ( 'O' === configuredPart.product_type.value && 'kHz' === configuredPart.frequency_unit.value )\n  )\n    sizeOptions.aecq200 = true\n\n  // `Vibration Resistant` option for C3VR family\n  if(\n    'C' === configuredPart.product_type.value\n    && '3' === configuredPart.size.value\n  )\n    sizeOptions.vibrationResistant = true\n\n  return sizeOptions\n}","import React, { Component } from 'react';\n\nclass FrequencyUnit extends Component{\n\n  /**\n   * Handles a change in state for an input element\n   *\n   * @param      {object}  e       A changeEvent object\n   */\n  handleChange = (e) => {\n    const { configuredPart } = this.props\n    const frequencyUnitLabels = {'mhz': 'MHz', 'khz': 'kHz'}\n    if( 'C' === configuredPart.product_type.value || 'K' === configuredPart.product_type.value ){\n      if( window.confirm('Updating this setting will reset your additional options. Continue?') )\n        this.props.updateConfiguredPart(e.target.name,{ value: e.target.value, label: frequencyUnitLabels[e.target.value] } );\n    } else {\n      this.props.updateConfiguredPart(e.target.name,{ value: e.target.value, label: frequencyUnitLabels[e.target.value] } );\n    }\n  }\n\n  render(){\n    const { configuredPart } = this.props\n    const khzParts = ['C','K','O']\n\n    return(\n      <div>\n        <label className=\"\" htmlFor=\"frequency_unit\">Unit</label>\n        <div className=\"form-check\">\n          <input className=\"form-check-input\" type=\"radio\" name=\"frequency_unit\" value=\"mhz\" id=\"MHz\" checked={configuredPart.frequency_unit.value === 'mhz'} onChange={this.handleChange} />\n          <label className=\"form-check-label\" htmlFor=\"MHz\">\n            MHz\n          </label>\n        </div>\n        { typeof configuredPart.product_type !== 'undefined' &&\n          -1 < khzParts.indexOf( configuredPart.product_type.value ) &&\n        <div className=\"form-check\">\n          <input className=\"form-check-input\" type=\"radio\" name=\"frequency_unit\" value=\"khz\" id=\"kHz\" checked={configuredPart.frequency_unit.value === 'khz'} onChange={this.handleChange} />\n          <label className=\"form-check-label\" htmlFor=\"kHz\">\n            kHz\n          </label>\n        </div> }\n      </div>\n    )\n  }\n}\n\nexport default FrequencyUnit\n\n/*\n( 'T' !== configuredPart.product_type.value\n            && 'Y' !== configuredPart.product_type.value\n            && 'S' !== configuredPart.product_type.value\n            && ( 'C' === configuredPart.product_type.value || 'K' === configuredPart.product_type.value || 'O' === configuredPart.product_type.value ) )\n */","import React, { Component } from 'react';\nimport Select from 'react-select';\n\nclass SelectSize extends Component{\n\n  handleChange = (selectedOption) => {\n    this.props.updateConfiguredPart('size',selectedOption)\n  }\n\n  render(){\n    const { configuredPart, sizeOptions, loadingPartOptions } = this.props\n    const size = configuredPart.size;\n    let optionValue = size;\n\n    // When we have no size options, set `value` ===\n    // the option value that matches our `configuredPart.size`\n    //if( 0 === sizeOptions.length )\n      //optionValue = savedSizeOption;\n\n    let backgroundColor = null\n    if( 0 === sizeOptions.length && '_' === size.value ){\n      backgroundColor = '#eee'\n    } else if( 0 === sizeOptions.length && 0 < size.value.length ){\n      backgroundColor = 'salmon'\n    } else if( 0 < sizeOptions.length && '_' === size.value ){\n      // do nothing\n    } else if( 0 < sizeOptions.length && '_' !== size.value && 0 < size.value.length ){\n      // typically  here we would set the `optionValue` = our stored configuredPart.size\n    }\n\n    const customStyles = {\n      control: styles => ({...styles, backgroundColor: backgroundColor})\n    }\n\n    /**\n     * Set size for multi-variat sizes.\n     *\n     * Consider the following example:\n     *\n     * - kHz-Crysal-SMD\n     * - Size options: 135,13L,13A\n     *\n     * Whenever we have our API return sizeOptions[0].value = '135,13L,13A'\n     * and our configuredPart.size.value === one of those three options,\n     * we must set this SizeSelect to match the returned sizeOptions[0].label\n     * while updating this SizeSelect's value to be the selected option of\n     * the three possible options.\n     */\n    /*\n    if( 1 === sizeOptions.length && sizeOptions[0].value.indexOf(',') && -1 === optionValue.value.indexOf(',') && null !== this.state.savedSizeOption ){\n      let label = ( typeof savedSizeOption.label !== 'undefined' )? savedSizeOption.label : optionValue.label\n      optionValue = { value: optionValue.value, label: label }\n    }\n    */\n    if( 1 === sizeOptions.length && sizeOptions[0].value.indexOf(',') && -1 === optionValue.value.indexOf(',') ){\n      //let label = ( typeof savedSizeOption.label !== 'undefined' )? savedSizeOption.label : optionValue.label\n      optionValue = { value: optionValue.value, label: optionValue.label }\n    }\n\n    if( null !== optionValue && typeof optionValue.value !== 'undefined' && 0 <= optionValue.value.indexOf('_') )\n      optionValue = ''\n\n    /**\n     * 04/11/2019 (06:42) - I'm not sure how the following is working with the\n     * `value` attribute commented out. When I uncomment it, I get the following\n     * Warning when trying to set Size:\n     *\n     * Warning: A component is changing an uncontrolled input of type hidden to be\n     * controlled. Input elements should not switch from uncontrolled to\n     * controlled (or vice versa). Decide between using a controlled or\n     * uncontrolled input element for the lifetime of the component.\n     *\n     * Commenting out `value` removes the above error. Curiously, I don't get an\n     * error about `optionValue` not being used, and the size select keeps getting\n     * set correctly.\n     */\n\n    return(\n      <div style={{minWidth: '230px'}}>\n        <label htmlFor=\"size\">Size</label>\n        <Select\n          name=\"size\"\n          value={optionValue}\n          isClearable\n          isLoading={loadingPartOptions}\n          onChange={this.handleChange}\n          placeholder=\"Size...\"\n          autoBlur={true}\n          matchPos=\"start\"\n          options={sizeOptions}\n          styles={customStyles}\n        />\n      </div>\n    );\n  };\n}\n\nexport default SelectSize;","import React, { Component } from 'react';\nimport { RadioGroup, Radio } from 'react-radio-group';\n\nclass CompensationOptions extends Component{\n\n  constructor(){\n    super();\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(selectedOption){\n    const { updateConfiguredPart } = this.props;\n    updateConfiguredPart( 'output', {value: selectedOption, label: 'Clipped Sine' } )\n  }\n\n  render(){\n    const { configuredPart } = this.props;\n\n    const selectedCompensation = (\n      1 === configuredPart.output.value.length\n      && ( 'A' === configuredPart.output.value || 'C' === configuredPart.output.value )\n    )? configuredPart.output.value : '';\n\n    return(\n      <div className=\"form-row\">\n        <div className=\"col-md-4 offset-md-6\">\n          <div className=\"alert alert-secondary\">\n            <RadioGroup name=\"compensation_option\" selectedValue={selectedCompensation} onChange={this.handleChange}>\n\n              <div className=\"row\">\n                <div className=\"col-8\" style={{whiteSpace: 'nowrap'}}>\n                  <label htmlFor=\"std-compensation\">Standard Digital Compensation</label>\n                </div>\n                <div className=\"col-4\" style={{whiteSpace: 'nowrap'}}>\n                  <Radio value=\"C\" id=\"std-compensation\" />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-8\" style={{whiteSpace: 'nowrap'}}>\n                  <label htmlFor=\"opt-compensation\">Optional Analog Compensation</label>\n                </div>\n                <div className=\"col-4\" style={{whiteSpace: 'nowrap'}}>\n                    <Radio value=\"A\" id=\"opt-compensation\" />\n                </div>\n              </div>\n\n            </RadioGroup>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CompensationOptions;","import React, { Component } from 'react';\n\nclass AECQ200 extends Component {\n\n  /*\n  componentDidMount(){\n    const { configuredPart, updateConfiguredPart } = this.props\n    switch(configuredPart.product_type.value){\n      case 'K':\n        if( -1 < configuredPart.size.value.indexOf(',') ){\n          console.log('Size value has a comma. CheckboxAECQ200 setting Size to default')\n          let defaultSize = {value: '', label: ''}\n          const currentSize = configuredPart.size.value.substring(0,2)\n          switch(currentSize){\n            case '12':\n              defaultSize = {value: '122', label: '2.0x1.2 mm'}\n              break\n\n            case '13':\n              defaultSize = {value: '135', label: '3.2x1.5 mm'}\n              break\n\n            default:\n              console.log('No default size set for ' + currentSize)\n          }\n          updateConfiguredPart('size',defaultSize)\n        }\n        break\n\n      default:\n    }\n  }\n  /**/\n\n  handleChange = (e) => {\n    const { configuredPart, updateConfiguredPart } = this.props\n\n    let value = ''\n    let label = ''\n    switch(configuredPart.product_type.value){\n      case 'C':\n        value = ( e.target.checked )? 'BA' : 'BS'\n        updateConfiguredPart('package_option',value)\n        break;\n\n      case 'K':\n        switch(configuredPart.size.value){\n          case '122':\n          case '12A':\n          case '122,12A':\n          case '12A,122':\n            value = ( e.target.checked )? '12A' : '122'\n            label = '2.0x1.2 mm'\n            break\n\n          case '13A':\n          case '135':\n          case '13L':\n          case '13A,135,13L':\n          case '135,13A,13L':\n          case '13A,13L,135':\n          case '13L,13A,135':\n          case '135,13L,13A':\n          case '13L,135,13A':\n            value = ( e.target.checked )? '13A' : '135'\n            label = '3.2x1.5 mm'\n            break\n\n          default:\n            const defaultValue = ( '12' ===  e.target.value.substring(0,2) )? '122' : '135'\n            value = ( e.target.checked )? e.target.value : defaultValue\n        }\n        updateConfiguredPart('size',{value: value, label: label})\n        break;\n\n      case 'O':\n        value = ( e.target.checked )? 'HA' : '__'\n        updateConfiguredPart('output',value)\n        break\n\n      default:\n        // nothing\n    }\n\n  }\n\n  render(){\n    const { configuredPart } = this.props\n\n    let value = ''\n    let checked = false\n    switch(configuredPart.product_type.value){\n      case 'C':\n        value = 'BA'\n        if('BA' === configuredPart.package_option.value)\n          checked = true\n        break\n\n      case 'K':\n        value = configuredPart.size.value.substring(0,2) + 'A'\n        if(value === configuredPart.size.value)\n          checked = true\n        break\n\n      case 'O':\n        value = 'HA'\n        if(\n          typeof configuredPart.output !== 'undefined'\n          && 'HA' === configuredPart.output.value\n        )\n          checked = true\n        break\n\n      default:\n    }\n\n    return(\n      <div className=\"form-check align-middle\">\n        <input type=\"checkbox\" className=\"form-check-input\" id=\"aec-q200\" value={value} checked={checked} onChange={this.handleChange}/>\n                <label htmlFor=\"aec-q200\" className=\"form-check-label\">AEC-Q200</label>\n      </div>\n    );\n  }\n}\n\nexport default AECQ200;","import React, { Component } from 'react'\n\nclass VibrationResistant extends Component {\n\n  handleChange = (e) => {\n    const { updateConfiguredPart } = this.props\n\n    console.log(`🔔 e.target.checked = `, e.target.checked )\n    if( e.target.checked ){\n      updateConfiguredPart( 'package_option', 'VR' )\n    } else {\n      updateConfiguredPart( 'package_option', 'BS' )\n    }\n  }\n\n  render(){\n    const { configuredPart } = this.props\n\n    return(\n      <div className=\"form-check\">\n        <input type=\"checkbox\" className=\"form-check-input\" id=\"vibration-resistant\" value=\"VR\" checked={('VR' === configuredPart.package_option.value)} onChange={this.handleChange}/>\n        <label htmlFor=\"vibration-resistant\" className=\"form-check-label\">Vibration Resistant</label>\n      </div>\n    );\n  }\n}\n\nexport default VibrationResistant","import React, { Component } from 'react';\nimport Select from 'react-select';\n\nclass SelectEnableType extends Component{\n\n  handleChange = (selectedOption) => {\n    this.props.updateConfiguredPart('enable_type',selectedOption)\n  }\n\n  render(){\n    const { configuredPart, enableTypeOptions, loadingPartOptions } = this.props\n    const enableTypeValue = (typeof configuredPart.enable_type !== 'undefined')? configuredPart.enable_type.value : ''\n\n    let optionValue = null\n    let backgroundColor = null\n    if( 0 === enableTypeOptions.length && '_' === enableTypeValue ){\n      // No options available, and enableType isn't set\n      backgroundColor = '#eee'\n    } else if( 0 === enableTypeOptions.length && 0 < enableTypeValue.length ){\n      // No options available, and enableType is set\n      backgroundColor = 'salmon'\n      optionValue = configuredPart.enableType\n    } else if( 0 < enableTypeOptions.length && '_' === enableTypeValue ){\n      // Options available, and enableType is not set\n      // Do nothing so placeholder text will show\n    } else if( 0 < enableTypeOptions.length && '_' !== enableTypeValue && 0 < enableTypeValue.length ){\n      // Options available, and enableType is set\n      optionValue = configuredPart.enableType\n    }\n\n    const customStyles = {\n      control: styles => ({...styles, backgroundColor: backgroundColor})\n    }\n\n    return(\n      <div>\n        <label htmlFor=\"enable_type\">Enable/Disable Type</label>\n        <Select\n          name=\"enable_type\"\n          value={optionValue}\n          onChange={this.handleChange}\n          placeholder=\"E/D Type...\"\n          options={enableTypeOptions}\n          styles={customStyles}\n          isClearable\n          isLoading={loadingPartOptions}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SelectEnableType;","import React, { Component } from 'react';\nimport Select from 'react-select';\n\nclass SelectTolerance extends Component{\n\n  handleChange = (selectedOption) => {\n    this.props.updateConfiguredPart('tolerance',selectedOption)\n  }\n\n  render(){\n    const { configuredPart, toleranceOptions, loadingPartOptions } = this.props;\n\n    // 04/26/2019 (17:34) - CONTINUE HERE: `undefined`\n    //console.log('configuredPart.tolerance = ', configuredPart.tolerance)\n    if( typeof configuredPart.tolerance === undefined )\n      return\n\n    let toleranceValue = (typeof configuredPart.tolerance !== 'undefined')? configuredPart.tolerance.value : ''\n\n    // When we have no tolerance options, set `value` ===\n    // the option value that matches our `configuredPart.size`\n    //if( 0 === toleranceOptions.length )\n    //  optionValue = savedToleranceOption;\n\n    let optionValue = null\n    let backgroundColor = null\n    if( 0 === toleranceOptions.length && '_' === toleranceValue ){\n      // Configuration doesn't have any `tolerance` options,\n      // AND no tolerance value is stored in our configuredPart.\n      // This means our toleranceSelect is \"empty\" with no options\n      // to select.\n      //\n      // Do the following:\n      // - Set the option's background color to `gray`.\n      // - `optionValue` should be `null` to allow placeholder text to show.\n      backgroundColor = '#eee'\n    } else if( 0 === toleranceOptions.length && 0 < toleranceValue.length ){\n      // Configuration doesn't have any `tolerance` options,\n      // AND we have a tolerance value stored in our configuredPart.\n      // This means our configuredPart.tolerance.value is not available.\n      //\n      // Do the following:\n      // - Set the options' background color to `red` to show an `error` state.\n      // - Set `optionValue` = our stored configuredPart.tolerance.\n      backgroundColor = 'salmon'\n      optionValue = configuredPart.tolerance\n    } else if( 0 < toleranceOptions.length && '_' === toleranceValue ){\n      // We have available options BUT no tolerance value is stored in\n      // our configuredPart.\n      //\n      // Do the following:\n      // - `optionValue` should be `null` to allow placeholder text to show.\n      //\n      // nothing to do here...\n    } else if( 0 < toleranceOptions.length && '_' !== toleranceValue && 0 < toleranceValue.length ){\n      // We have available options AND a tolerance value stored in our\n      // configuredPart.\n      //\n      // Do the following:\n      // - Set `optionValue` = our stored configuredPart.tolerance\n      optionValue = configuredPart.tolerance\n    }\n\n    const customStyles = {\n      control: styles => ({...styles, backgroundColor: backgroundColor})\n    }\n\n    return(\n      <div>\n        <label htmlFor=\"tolerance\">Tolerance</label>\n        <Select\n          name=\"tolerance\"\n          value={optionValue}\n          isClearable\n          isLoading={loadingPartOptions}\n          onChange={this.handleChange}\n          placeholder=\"Tolerance...\"\n          matchPos=\"start\"\n          options={toleranceOptions}\n          styles={customStyles}\n        />\n      </div>\n    );\n  };\n}\n\nexport default SelectTolerance;","import React, { Component } from 'react';\nimport Select from 'react-select';\n\nclass SelectSpread extends Component{\n\n  handleChange = (selectedOption) => {\n    this.props.updateConfiguredPart('spread',selectedOption)\n  }\n\n  render(){\n    const { configuredPart, spreadOptions } = this.props\n    const spreadValue = (typeof configuredPart.spread !== 'undefined')? configuredPart.spread.value : ''\n\n    let optionValue = null\n    let backgroundColor = null\n    if( 0 === spreadOptions.length && '_' === spreadValue ){\n      // No options available, and spread isn't set\n      backgroundColor = '#eee'\n    } else if( 0 === spreadOptions.length && 0 < spreadValue.length ){\n      // No options available, and spread is set\n      backgroundColor = 'salmon'\n      optionValue = configuredPart.spread\n    } else if( 0 < spreadOptions.length && '_' === spreadValue ){\n      // Options available, and spread is not set\n      // Do nothing so placeholder text will show\n    } else if( 0 < spreadOptions.length && '_' !== spreadValue && 0 < spreadValue.length ){\n      // Options available, and spread is set\n      optionValue = configuredPart.spread\n    }\n\n    const customStyles = {\n      control: styles => ({...styles, backgroundColor: backgroundColor})\n    }\n\n    return(\n      <div>\n        <label htmlFor=\"spread\">Spread Range</label>\n        <Select\n          name=\"spread\"\n          value={optionValue}\n          onChange={this.handleChange}\n          placeholder=\"Spread Range...\"\n          options={spreadOptions}\n          styles={customStyles}\n          isClearable\n        />\n      </div>\n    );\n  }\n\n}\n\nexport default SelectSpread;","import React, { Component } from 'react';\nimport Select from 'react-select';\n\nclass SelectOutput extends Component{\n\n  constructor(){\n    super();\n    this.state = {\n      savedOutputOption: null\n    }\n  }\n\n  /**\n   * Warning: componentWillReceiveProps has been renamed, and is not recommended for use. See https://fb.me/react-async-component-lifecycle-hooks for details.\n   *\n   * - Move data fetching code or side effects to componentDidUpdate.\n   * - If you're updating state whenever props change, refactor your code to\n   *   use memoization techniques or move it to static\n   *   getDerivedStateFromProps. Learn more at: https://fb.me/react-derived-state\n   * - Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to\n   *   suppress this warning in non-strict mode. In React 17.x, only the UNSAFE_\n   *   name will work. To rename all deprecated lifecycles to their new names,\n   *   you can run `npx react-codemod rename-unsafe-lifecycles` in your project\n   *   source folder.\n   */\n  UNSAFE_componentWillReceiveProps(){\n    const { configuredPart, updateConfiguredPart } = this.props;\n    const { savedOutputOption } = this.state;\n\n    /**\n     * Whenever we reset Voltage to \"_\" with a multi-option Output\n     * selected, we need to reset the Output to the multi-option\n     * value in order to provide all the possible Voltage options.\n     */\n    if( configuredPart.voltage !== null && savedOutputOption !== null ){\n      if(\n        configuredPart.voltage.value === '_' // Voltage is empty\n        && -1 < savedOutputOption.value.indexOf(',') // We have a multi-option Output\n        && -1 < savedOutputOption.value.indexOf(configuredPart.output.value) // Our current Output is in the saved multi-option Output\n        ){\n        updateConfiguredPart('output',savedOutputOption)\n      }\n    }\n  }\n\n  handleChange = (selectedOption) => {\n    const { configuredPart, updateConfiguredPart } = this.props;\n\n    // Update related options\n    switch(configuredPart.product_type.value){\n      case 'T':\n        if( '2' === configuredPart.size.value && null !== selectedOption && 'H' === selectedOption.value )\n          updateConfiguredPart( 'pin_1', { value: 'D', label: 'E/D' }, true );\n\n        if( '7' === configuredPart.size.value && null !== selectedOption && 'C' === selectedOption.value )\n          updateConfiguredPart( 'pin_1', { value: 'V', label: 'Voltage Control' }, true );\n\n        if( '9' === configuredPart.size.value && null !== selectedOption && 'H' === selectedOption.value )\n          updateConfiguredPart( 'pin_1', { value: 'V', label: 'Voltage Control' }, true );\n        break;\n\n      default:\n        // nothing\n    }\n\n    updateConfiguredPart( 'output', selectedOption )\n  }\n\n  render(){\n    const { configuredPart, loadingPartOptions } = this.props;\n    let { outputOptions } = this.props;\n    //const { savedOutputOption } = this.state;\n    //let output = configuredPart.output;\n    //let optionValue = output;\n    const outputValue = (typeof configuredPart.output !== 'undefined')? configuredPart.output.value : ''\n\n    /*\n    if( 3 <= configuredPart.size.value && null !== this.state.savedOutputOption )\n      optionValue = this.state.savedOutputOption\n\n    if( typeof outputOptions === 'undefined' || 0 === outputOptions.length )\n      optionValue = savedOutputOption;\n\n    var className = null;\n    if( typeof outputOptions !== 'undefined' ){\n      if( 0 === outputOptions.length && '_' === output.value ){\n        className = 'empty';\n      } else if( 0 === outputOptions.length && 0 < output.value.length ){\n        className = 'error';\n      }\n    }\n    */\n\n    let optionValue = null\n    let backgroundColor = null\n\n    /**\n     * Has output been reset by Voltage?\n     *\n     * When output = { value: \"__\", label: \"Example Label\" }, in other\n     * words when the value has been set to \"blank\" and the label\n     * matches one of this.state.storedOptions, it has been reset.\n     */\n    /*\n    const outputLabel = configuredPart.output.label\n    if( '' !== outputLabel && '__' === outputValue ){\n      const { storedOptions } = this.state\n      console.log('storedOptions = ', storedOptions)\n      storedOptions.forEach(function(el){\n        if( outputLabel === el.label )\n          optionValue = el\n      })\n    }\n    /**/\n\n    if( 0 === outputOptions.length && '__' === outputValue ){\n      // No options available, and output isn't set\n      backgroundColor = '#eee'\n    } else if( 0 === outputOptions.length && 0 < outputValue.length ){\n      // No options available, and output is set\n      backgroundColor = 'salmon'\n      optionValue = configuredPart.output\n    } else if( 0 < outputOptions.length && '__' === outputValue ){\n      // Options available, and output is not set\n      // Do nothing so placeholder text will show\n    } else if( 0 < outputOptions.length && '__' !== outputValue && 0 < outputValue.length ){\n      // Options available, and output is set\n      optionValue = configuredPart.output\n    }\n\n    const customStyles = {\n      control: styles => ({...styles, backgroundColor: backgroundColor})\n    }\n\n\n    if( typeof configuredPart.output !== 'undefined' && 'HA' === configuredPart.output.value ){\n      optionValue = {value: 'HA', label: 'HCMOS, AEC-Q200'};\n      outputOptions = [optionValue];\n    }\n\n    // If option isn't set, set our drop down to show the placeholder\n    if( null !== optionValue && typeof optionValue.value !== 'undefined' && -1 < optionValue.value.indexOf('_') )\n      optionValue = ''\n\n    return(\n      <div>\n        <label htmlFor=\"output\">Output</label>\n        <Select\n          name=\"output\"\n          value={optionValue}\n          onChange={this.handleChange}\n          placeholder=\"Output...\"\n          matchPos=\"start\"\n          options={outputOptions}\n          styles={customStyles}\n          isClearable\n          isLoading={loadingPartOptions}\n        />\n      </div>\n    );\n  };\n}\n\nexport default SelectOutput;\n","import React, { Component } from 'react';\nimport { RadioGroup, Radio } from 'react-radio-group';\n\nclass VoltageOptions extends Component{\n\n  /*\n  componentDidUpdate(){\n    const { configuredPart, updateConfiguredPart } = this.props\n    const voltage = configuredPart.voltage.value\n    switch(voltage){\n      case 'A':\n        if( '_' === configuredPart.output.value.substring(0,1) ){\n          switch(configuredPart.size.value){\n            case '5':\n              updateConfiguredPart('output',{value: 'HD', label: 'HD'})\n              break\n\n            default:\n              updateConfiguredPart('output',{value: 'HH', label: 'HH'})\n          }\n        }\n        break\n\n      case 'B':\n      case 'C':\n      case 'H':\n      case 'J':\n        if( '_' === configuredPart.output.value.substring(0,1) ){\n          console.log('VoltageOptions->componentDidUpdate() setting Output = `HS`')\n          updateConfiguredPart('output',{value: 'HS', label: 'HS'})\n        }\n        break\n\n      default:\n        if( '_' === configuredPart.output.value.substring(0,1) )\n          updateConfiguredPart('output',{value: 'HS', label: 'HS'})\n    }\n    return\n  }\n  /**/\n\n  getOptionalInputCurrent = () => {\n    const { configuredPart } = this.props\n    const frequency = parseFloat( configuredPart.frequency.value )\n\n    const optionalInputCurrent = {available: true, message: ''}\n\n    switch(configuredPart.voltage.value){\n      case 'B':\n      case 'C':\n      case 'B,C':\n      case 'C,B':\n        if( 1.8 <= frequency && 32 >= frequency ){\n          optionalInputCurrent.message = '2.5mA'\n        } else if( 50 >= frequency ){\n          optionalInputCurrent.message = '3.5mA'\n        } else {\n          optionalInputCurrent.available = false\n          optionalInputCurrent.range = '1.8 - 50MHz'\n          optionalInputCurrent.message = 'O/R'\n        }\n        break\n\n      case 'H':\n      case 'J':\n      case 'J,H':\n      case 'H,J':\n        if( 1.8 <= frequency && 32 >= frequency ){\n          optionalInputCurrent.message = '1.5mA'\n        } else if( 50 >= frequency ){\n          optionalInputCurrent.message = '2.5mA'\n        } else {\n          optionalInputCurrent.available = false\n          optionalInputCurrent.range = '1.8 - 50MHz'\n          optionalInputCurrent.message = 'O/R'\n        }\n        break\n\n      default:\n        // nothing\n    }\n\n    return optionalInputCurrent\n  }\n\n  getStandardInputCurrent = () => {\n    const { configuredPart } = this.props\n    const frequency = parseFloat( configuredPart.frequency.value )\n\n    const standardInputCurrent = {available: true, message: ''}\n\n    if( '3' === configuredPart.size.value ){\n      switch(configuredPart.voltage.value){\n        case 'B':\n        case 'C':\n        case 'B,C':\n        case 'C,B':\n          if( 0.5 <= frequency && 20 >= frequency ){\n            standardInputCurrent.message = '7mA'\n          } else if ( 40 >= frequency ){\n            standardInputCurrent.message = '13mA'\n          } else if ( 60 >= frequency ){\n            standardInputCurrent.message = '19mA'\n          } else if (75 >= frequency ){\n            standardInputCurrent.message = '24mA'\n          } else if (80 >= frequency ){\n            standardInputCurrent.message = '30mA'\n          } else if ( 125 >= frequency ){\n            standardInputCurrent.message = '40mA'\n          } else if ( 170 >= frequency ){\n            standardInputCurrent.message = '50mA'\n          } else {\n            standardInputCurrent.available = false\n            standardInputCurrent.range = '0.5 - 170MHz'\n            standardInputCurrent.message = 'O/R'\n          }\n          break\n\n        case 'H':\n        case 'J':\n        case 'J,H':\n        case 'H,J':\n          if( 0.625 <= frequency && 20 >= frequency){\n            standardInputCurrent.message = '5mA'\n          } else if ( 40 >= frequency ){\n            standardInputCurrent.message = '9mA'\n          } else if ( 60 >= frequency ){\n            standardInputCurrent.message = '11mA'\n          } else if ( 75 >= frequency ){\n            standardInputCurrent.message = '14mA'\n          } else{\n            standardInputCurrent.available = false\n            standardInputCurrent.range = '0.625 - 75MHz'\n            standardInputCurrent.message = 'O/R'\n          }\n          break\n\n        default:\n          // nothing\n      }\n    } else if( '5' === configuredPart.size.value ){\n      switch(configuredPart.voltage.value){\n        case 'B':\n        case 'C':\n        case 'B,C':\n        case 'C,B':\n          if( 1 <= frequency && 32 >= frequency ){\n            standardInputCurrent.message = '15mA'\n          } else if ( 50 >= frequency ){\n            standardInputCurrent.message = '20mA'\n          } else if ( 80 >= frequency ){\n            standardInputCurrent.message = '25mA'\n          } else if ( 125 >= frequency ){\n            standardInputCurrent.message = '40mA'\n          } else if ( 170 >= frequency ){\n            standardInputCurrent.message = '50mA'\n          } else {\n            standardInputCurrent.available = false\n            standardInputCurrent.range = '1 - 170MHz'\n            standardInputCurrent.message = 'O/R'\n          }\n          break\n\n        case 'H':\n          if( 1 <= frequency && 32 >= frequency ){\n            standardInputCurrent.message = '10mA'\n          } else if ( 80 >= frequency ){\n            standardInputCurrent.message = '18mA'\n          } else if( 125 >= frequency ){\n            standardInputCurrent.message = '28mA'\n          } else {\n            standardInputCurrent.available = false\n            standardInputCurrent.range = '1 - 125MHz'\n            standardInputCurrent.message = 'O/R'\n          }\n          break\n\n        default:\n          // nothing\n      }\n    }\n\n    return standardInputCurrent\n  }\n\n  handleChange = (value) => {\n    const { configuredPart, updateConfiguredPart } = this.props\n    // If `comma` in saved value, delay the update. Otherwise update immediately\n    let delay = false\n    delay = ( -1 < configuredPart.voltage.value.indexOf(',') )? true : false ;\n\n    console.clear()\n    // updating `output` to \" + value, \"\\nconfiguredPart.voltage.value = \", configuredPart.voltage.value, \"\\ndelay = \", delay)\n\n    let voltageOption = {}\n    switch(value){\n      // Optional Input Current\n      case 'HL':\n        switch(configuredPart.voltage.label){\n          case '3.3 Volts':\n            delay = true\n            voltageOption = {value: 'B', label: '3.3 Volts'}\n            break;\n\n          case '2.5 Volts':\n            delay = true\n            voltageOption = {value: 'H', label: '2.5 Volts'}\n            break;\n\n          default:\n        }\n\n        break\n\n      // HS = Standard Input Current\n      case 'HS':\n        switch(configuredPart.voltage.label){\n          case '3.3 Volts':\n            delay = true\n            voltageOption = {value: 'C', label: '3.3 Volts'}\n            break;\n\n          case '2.5 Volts':\n            delay = true\n            voltageOption = {value: 'H', label: '2.5 Volts'} // Why is this `H`? According to 2.5V options, we would expect this to be `J`.\n            break;\n\n          default:\n        }\n        break\n\n      case 'LS':\n      case 'LD':\n        switch(configuredPart.voltage.label){\n          case '3.3 Volts':\n            delay = true\n            voltageOption = {value: 'C', label: '3.3 Volts'}\n            break\n\n          case '2.5 Volts':\n            delay = true\n            voltageOption = {value: 'J', label: '2.5 Volts'}\n            break\n\n          default:\n        }\n        break\n\n      /*\n      case 'PS':\n      case 'PD':\n      case 'PU':\n        switch(configuredPart.voltage.label){\n          case '3.3 Volts':\n            delay = true\n            console.log('ALERT: No option defined for 3.3 Volts!')\n            break\n\n          case '2.5 Volts':\n            delay = true\n            voltageOption = {value: 'J', label: '2.5 Volts'}\n            break\n        }\n        break\n      */\n\n      default:\n        if( -1 < configuredPart.voltage.value.indexOf(',') )\n          console.log(\"[VoltageOptions.js]->handleChange()\\nWARNING: No change handler written for `\"+value+\"`!\\n\\n• voltage = \" + configuredPart.voltage.label + \" (\" + configuredPart.voltage.value + \")\\n• output = \" + configuredPart.output.label + \"(\" + value + \")\\n\\nWhich voltage should we choose from `\" + configuredPart.voltage.value + \"` when \" + configuredPart.output.label + \"(\" + value + \")?\")\n    }\n\n    console.log(\"[VoltageOptions.js]->handleChange(value)\\n• value: \", value, \"\\n• delay: \", delay, \"\\n• voltageOption: \", voltageOption )\n\n    updateConfiguredPart( 'output', {value: value, label: configuredPart.output.label} ) // , delay\n    if( typeof voltageOption.value !== 'undefined' )\n      updateConfiguredPart( 'voltage', voltageOption )\n  }\n\n  showOptions = (voltage) => {\n    const { configuredPart } = this.props\n    const output = configuredPart.output.value\n    console.log(\"[VoltageOptions.js]->showOptions(voltage)\")\n    console.log(\"• voltage: \", voltage)\n    console.log(\"• output: \", output )\n\n    let excludedOutputs = []\n    switch(configuredPart.size.value){\n      case '7':\n        excludedOutputs = ['SL','HA']\n        break;\n\n      default:\n        excludedOutputs = ['PS','LS','SL']\n    }\n    if( excludedOutputs.includes(output) )\n      return\n\n    if( 'P' === output.substring(0,1) ){\n      return(\n          <div className=\"alert alert-secondary\">\n            <p>Jitter – E/D Pin:</p>\n            <RadioGroup name=\"voltage_option\" selectedValue={output} onChange={this.handleChange}>\n              <div className=\"row no-gutters\">\n                <div className=\"col-11\">\n                  <label htmlFor=\"standard\">Standard 0.3pS typ. Jitter, E/D Pin 1</label>\n                </div>\n                <div className=\"col-1\"><Radio value=\"PS\" id=\"standard\" /></div>\n              </div>\n              <div className=\"row no-gutters\">\n                <div className=\"col-11\">\n                  <label htmlFor=\"opt-jitter\">Optional 0.3pS typ. Jitter, E/D Pin 2</label>\n                </div>\n                <div className=\"col-1\"><Radio value=\"PD\" id=\"opt-jitter\" /></div>\n              </div>\n              { 'C' === configuredPart.voltage.value &&\n              <div className=\"row no-gutters\">\n                <div className=\"col-11\">\n                  <label htmlFor=\"opt-max-jitter\">Optional 0.1pS MAX Jitter, E/D Pin 1</label>\n                </div>\n                <div className=\"col-1\"><Radio value=\"PU\" id=\"opt-max-jitter\" /></div>\n              </div> }\n            </RadioGroup>\n          </div>\n      )\n    }\n\n    //if( 'LS' === output || 'LD' === output || ( -1 < output.indexOf(',') && -1 < output.indexOf('LD') ) ){\n    if( -1 < output.indexOf('LD') || -1 < output.indexOf('LS') ){\n      return(\n          <div className=\"alert alert-secondary\">\n            <p>Jitter – E/D Pin:</p>\n            <RadioGroup name=\"voltage_option\" selectedValue={output} onChange={this.handleChange}>\n              <div className=\"row no-gutters\">\n                <div className=\"col-11\">\n                  <label htmlFor=\"standard\">Standard 0.3pS typ. Jitter, E/D Pin 1</label>\n                </div>\n                <div className=\"col-1\"><Radio value=\"LS\" id=\"standard\" /></div>\n              </div>\n              <div className=\"row no-gutters\">\n                <div className=\"col-11\">\n                  <label htmlFor=\"opt-jitter\">Optional 0.3pS typ. Jitter, E/D Pin 2</label>\n                </div>\n                <div className=\"col-1\"><Radio value=\"LD\" id=\"opt-jitter\" /></div>\n              </div>\n            </RadioGroup>\n          </div>\n      )\n    }\n\n    switch(voltage){\n      case 'A':\n        let inputOptions = '';\n\n        switch(configuredPart.size.value){\n          case '5':\n            inputOptions = (\n              <div className=\"alert alert-secondary\">\n                <p>Output Load:</p>\n                <RadioGroup name=\"voltage_option\" selectedValue={output} onChange={this.handleChange}>\n                  <div className=\"row no-gutters\">\n                    <div className=\"col-11\">\n                      <label htmlFor=\"std-input\">Standard 50pF Load</label>\n                    </div>\n                    <div className=\"col-1\"><Radio value=\"HD\" id=\"std-input\" /></div>\n                  </div>\n                  <div className=\"row no-gutters\">\n                    <div className=\"col-11\">\n                      <label htmlFor=\"opt-load-ed\">Optional 15pF Load</label>\n                    </div>\n                    <div className=\"col-1\"><Radio value=\"HS\" id=\"opt-load-ed\" /></div>\n                  </div>\n                </RadioGroup>\n              </div>\n            )\n            break\n\n          case '7':\n            inputOptions = (\n              <div className=\"alert alert-secondary\">\n                <p>Output Load:</p>\n                <RadioGroup name=\"voltage_option\" selectedValue={output} onChange={this.handleChange}>\n                  <div className=\"row no-gutters\">\n                    <div className=\"col-11\">\n                      <label htmlFor=\"std-input\">Standard Tristate E/D, 50pF Load</label>\n                    </div>\n                    <div className=\"col-1\"><Radio value=\"HH\" id=\"std-input\" /></div>\n                  </div>\n                  {/*<div className=\"row no-gutters\">\n                    <div className=\"col-11\">\n                      <label htmlFor=\"opt-load-ed\">Optional 15pF Load with E/D</label>\n                    </div>\n                    <div className=\"col-1\"><Radio value=\"HD\" id=\"opt-load-ed\" /></div>\n                  </div>*/}\n                  <div className=\"row no-gutters\">\n                    <div className=\"col-11\">\n                      <label htmlFor=\"opt-load-standby\">Optional Standby E/D, 15pF Load</label>\n                    </div>\n                    <div className=\"col-1\"><Radio value=\"HB\" id=\"opt-load-standby\" /></div>\n                  </div>\n                </RadioGroup>\n              </div>\n            )\n            break\n\n            default:\n        }\n        return inputOptions\n\n      case 'B':\n      case 'C':\n      case 'B,C':\n      case 'C,B':\n      case 'H':\n      case 'J,H':\n      case 'H,J':\n        // FO7 does not have any `Input Current` options\n        if( '7' === configuredPart.size.value )\n          return\n\n        const optionalInputCurrent = this.getOptionalInputCurrent()\n        const standardInputCurrent = this.getStandardInputCurrent()\n        const stdInputCurrentMsg = ( typeof standardInputCurrent.message !== 'undefined' && '' !== standardInputCurrent.message )? ' (' + standardInputCurrent.message + ')' : ''\n\n        return(\n          <div className=\"alert alert-secondary\">\n            <p>Input Current:</p>\n            <RadioGroup name=\"voltage_option\" selectedValue={output} onChange={this.handleChange}>\n\n              <div className=\"row no-gutters\">\n                <div className=\"col-11\" style={{whiteSpace: 'nowrap'}}>\n                  <label htmlFor=\"std-input\">\n                    Standard Input Current{stdInputCurrentMsg}\n                  </label>\n                </div>\n                <div className=\"col-1\" style={{whiteSpace: 'nowrap'}}>\n                  { standardInputCurrent.available ? (\n                    <Radio value=\"HS\" id=\"std-input\" />\n                  ) : (\n                    <code style={{fontSize: '.8rem'}}>{standardInputCurrent.range}</code>\n                  )}\n                </div>\n              </div>\n              <div className=\"row no-gutters\">\n                <div className=\"col-11\" style={{whiteSpace: 'nowrap'}}>\n                  <label htmlFor=\"opt-input\">Optional Input Current ({optionalInputCurrent.message})</label>\n                </div>\n                <div className=\"col-1\" style={{whiteSpace: 'nowrap'}}>\n                  { optionalInputCurrent.available ? (\n                    <Radio value=\"HL\" id=\"opt-input\" />\n                  ) : (\n                    <code style={{fontSize: '.8rem'}}>{optionalInputCurrent.range}</code>\n                  )}\n                </div>\n              </div>\n\n            </RadioGroup>\n          </div>\n        )\n\n      default:\n        // console.log('No Voltage options defined for `' + voltage + '`. We need to set Output to whatever the value of the Output drop down is.');\n    }\n  }\n\n  render(){\n    const { configuredPart } = this.props\n    const voltage = configuredPart.voltage.value\n\n    return(\n      <div style={{marginTop: '16px'}}>\n          { this.showOptions(voltage) }\n      </div>\n    )\n  }\n}\n\nexport default VoltageOptions;","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport VoltageOptions from '../VoltageOptions';\n\nclass SelectVoltage extends Component{\n\n  handleChange = (selectedOption) => {\n    console.log(\"[SelectVoltage.js]->handleChange()\\n• selectedOption: \", selectedOption)\n    this.props.updateConfiguredPart('voltage',selectedOption)\n  }\n\n  render(){\n    const { configuredPart, voltageOptions, loadingPartOptions } = this.props\n    const voltageValue = ( typeof configuredPart.voltage !== 'undefined' )? configuredPart.voltage.value : ''\n\n    let optionValue = null\n    let backgroundColor = null\n    if( 0 === voltageOptions.length && '_' === voltageValue ){\n      // No options available, and voltage isn't set\n      backgroundColor = '#eee'\n    } else if( 0 === voltageOptions.length && 0 < voltageValue.length ){\n      // No options available, and voltage is set\n      backgroundColor = 'salmon'\n      optionValue = configuredPart.voltage\n    } else if( 0 < voltageOptions.length && '_' === voltageValue ){\n      // Options available, and voltage is not set\n      // Do nothing so placeholder text will show\n    } else if( 0 < voltageOptions.length && '_' !== voltageValue && 0 < voltageValue.length ){\n      // Options available, and voltage is set\n      optionValue = configuredPart.voltage\n    }\n\n    const customStyles = {\n      control: styles => ({...styles, backgroundColor: backgroundColor})\n    }\n\n    return(\n      <div>\n        <label htmlFor=\"voltage\">Voltage</label>\n        <Select\n          name=\"voltage\"\n          value={optionValue}\n          isClearable\n          isLoading={loadingPartOptions}\n          onChange={this.handleChange}\n          placeholder=\"Voltage...\"\n          matchPos=\"start\"\n          options={voltageOptions}\n          styles={customStyles}\n        />\n        {/*\n          * 05/03/2019 (15:01) - New idea: It seems we need to show\n          * VoltageOptions whenever we have a comma in configuredPart.voltage.value.\n          * Perhaps this should be in addition to the checks we have below?\n          */}\n        { typeof configuredPart.voltage !== 'undefined'\n        && 0 !== configuredPart.voltage.value.length\n        && '_' !== configuredPart.voltage.value\n        && 'O' === configuredPart.product_type.value\n        && ( \"3\" === configuredPart.size.value || \"5\" === configuredPart.size.value || \"7\" === configuredPart.size.value )\n        && <VoltageOptions configuredPart={configuredPart} updateConfiguredPart={this.props.updateConfiguredPart} /> }\n      </div>\n    );\n  };\n}\n\nexport default SelectVoltage;","import React, { Component } from 'react';\nimport Select from 'react-select';\n\nclass SelectStability extends Component{\n\n  handleChange = (selectedStability) => {\n    const { configuredPart, updateConfiguredPart } = this.props\n\n    // Update related options\n    console.log('selectedStability = ', selectedStability)\n    let outputValue = ''\n    if( 'T' === configuredPart.product_type.value ){\n      switch( configuredPart.size.value ){\n        case '1':\n        case '2':\n        case '3':\n          if( 'Clipped Sine' === configuredPart.output.label ){\n            if( null !== selectedStability ){\n              outputValue = ( 'U' === selectedStability.value )? 'G' : 'C';\n            } else {\n              // When we've reset the Stability option, reset Output to default:\n              outputValue = ( '3' === configuredPart.size.value )? 'A,C,G' : 'C,G';\n            }\n            updateConfiguredPart( 'output', { value: outputValue, 'label': 'Clipped Sine' }, true );\n          }\n          break;\n\n        case '5':\n        case '7':\n          switch( configuredPart.output.label ){\n            case 'Clipped Sine':\n              updateConfiguredPart( 'output', { value: 'C', 'label': 'Clipped Sine' }, true );\n              if( '7' === configuredPart.size.value )\n                updateConfiguredPart( 'pin_1', { value: 'V', 'label': 'Voltage Control' }, true );\n              break;\n\n            case 'HCMOS':\n              /**\n               * Compare the float val of our selected stability option.\n               */\n              if( null !== selectedStability && -1 < selectedStability.label.indexOf('ppm') ){\n                const stabilityLabelArray = selectedStability.label.split(' ');\n                const stabilityFloat = parseFloat( stabilityLabelArray[0] );\n                /**\n                 * 5.0x3.2 mm HCMOS:\n                 * - Stability >  0.5 ppm then Output = H\n                 * - Stability <= 0.5 ppm then Output = S\n                 *\n                 * 7.0x5.0 mm HCMOS:\n                 * - Stability >= 0.5 ppm then Output = H\n                 * - Stability <  0.5 ppm then Output = S\n                 */\n                const compareValue = ( '7' === configuredPart.size.value )? 0.49 : 0.5;\n\n                outputValue = ( compareValue >= parseFloat( stabilityFloat ) )? 'S' : 'H';\n                updateConfiguredPart( 'output', { value: outputValue, 'label': 'HCMOS' }, true );\n              } else if( null === selectedStability ){\n                updateConfiguredPart( 'output', { value: 'H,S', 'label': 'HCMOS' }, true );\n              }\n              break;\n\n            default:\n              // nothing\n          }\n          break;\n\n        case '9':\n          switch( configuredPart.output.label ){\n            case 'Clipped Sine':\n              updateConfiguredPart( 'output', { value: 'C', 'label': 'Clipped Sine' }, true );\n              break;\n\n            case 'HCMOS':\n              updateConfiguredPart( 'pin_1', { value: 'V', 'label': 'Voltage Control' }, true );\n              break;\n\n            default:\n              // nothing\n          }\n          break;\n\n        default:\n          // nothing\n      }\n    }\n    updateConfiguredPart( 'stability', selectedStability )\n  }\n\n  render(){\n    const { configuredPart, stabilityOptions, loadingPartOptions } = this.props\n    let stabilityValue = (typeof configuredPart.stability !== 'undefined')? configuredPart.stability.value : ''\n\n    let optionValue = null\n    let backgroundColor = null\n    if( 0 === stabilityOptions.length && '_' === stabilityValue ){\n      backgroundColor = '#eee'\n    } else if( 0 === stabilityOptions.length && 0 < stabilityValue.length ){\n      backgroundColor = 'salmon'\n      optionValue = configuredPart.stability\n    } else if( 0 < stabilityOptions.length && '_' === stabilityValue ){\n      // nothing...\n    } else if( 0 < stabilityOptions.length && '_' !== stabilityValue && 0 < stabilityValue.length ){\n      optionValue = configuredPart.stability\n    }\n\n    const customStyles = {\n      control: styles => ({...styles, backgroundColor: backgroundColor})\n    }\n\n    return(\n      <div>\n        <label htmlFor=\"stability\">Stability</label>\n        <Select\n          name=\"stability\"\n          value={optionValue}\n          isClearable\n          isLoading={loadingPartOptions}\n          onChange={this.handleChange}\n          placeholder=\"Stability...\"\n          matchPos=\"start\"\n          options={stabilityOptions}\n          styles={customStyles}\n        />\n      </div>\n    );\n  };\n}\n\nexport default SelectStability;","import React, { Component } from 'react';\nimport Select from 'react-select';\n\nclass SelectLoad extends Component{\n\n  handleChange = (selectedOption) => {\n    this.props.updateConfiguredPart('load',selectedOption);\n  }\n\n  render(){\n    const { configuredPart, loadOptions, loadingPartOptions } = this.props\n\n    const loadValue = (typeof configuredPart.load !== 'undefined')? configuredPart.load.value : ''\n    let optionValue = null\n    if( '_' === loadValue ){\n      // nothing\n    } else if( '_' !== loadValue && 0 < loadValue.length ){\n      optionValue = configuredPart.load\n    }\n\n    return(\n      <div>\n        <label htmlFor=\"load\">Load</label>\n        <Select\n          name=\"load\"\n          value={optionValue}\n          isClearable\n          isLoading={loadingPartOptions}\n          onChange={this.handleChange}\n          placeholder=\"Load...\"\n          matchPos=\"start\"\n          options={loadOptions}\n        />\n      </div>\n    );\n  };\n}\n\nexport default SelectLoad;","import React, { Component } from 'react';\nimport Select from 'react-select';\n\nclass SelectOpTemp extends Component{\n\n  constructor(){\n    super();\n    this.state = {\n      savedOpTempOption: {}\n    }\n  }\n\n  handleChange = (selectedOption) => {\n    this.setState(\n      {savedOpTempOption: selectedOption},\n      () => this.props.updateConfiguredPart('optemp',selectedOption)\n    );\n  }\n\n  render(){\n    const { configuredPart, optempOptions, loadingPartOptions } = this.props\n    let optempValue = (typeof configuredPart.optemp !== 'undefined')? configuredPart.optemp.value : ''\n\n    let optionValue = null\n    let backgroundColor = null\n    if( 0 === optempOptions.length && '_' === optempValue ){\n      backgroundColor = '#eee'\n    } else if ( 0 === optempOptions.length && 0 < optempValue.length ){\n      backgroundColor = 'salmon'\n      optionValue = configuredPart.optemp\n    } else if ( 0 < optempOptions.length && '_' === optempValue ){\n      // nothing...\n    } else if( 0 < optempOptions.length && '_' !== optempValue && 0 < optempValue.length ){\n      optionValue = configuredPart.optemp\n    }\n\n    const customStyles = {\n      control: styles => ({...styles, backgroundColor: backgroundColor})\n    }\n\n    return(\n      <div>\n        <label htmlFor=\"optemp\">Op Temp</label>\n        <Select\n          name=\"optemp\"\n          value={optionValue}\n          isClearable\n          isLoading={loadingPartOptions}\n          onChange={this.handleChange}\n          placeholder=\"Op Temp...\"\n          options={optempOptions}\n          styles={customStyles}\n        />\n      </div>\n    );\n  };\n}\n\nexport default SelectOpTemp;","import React, { Component } from 'react';\nimport { RadioGroup, Radio } from 'react-radio-group';\n\nclass SizeOptions extends Component{\n\n  constructor(){\n    super();\n    this.showOptions = this.showOptions.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(value){\n    switch(this.props.configuredPart.product_type.value){\n      case 'K':\n        const sizeValue = ( 0 <= value.indexOf('13') )? { value: value, label: '3.2x1.5 mm' } : { value: value, label: '2.0x1.2 mm'}\n        this.props.updateConfiguredPart('size',sizeValue)\n        break;\n\n      default:\n        this.props.updateConfiguredPart('package_option',value)\n    }\n  }\n\n  showOptions(size,package_option){\n\n    switch(size){\n\n      case '121,124':\n      case '121':\n      case '124':\n        return(\n          <div className=\"alert alert-secondary\">\n            <p>1.2 x 1.0 mm package options:</p>\n            <RadioGroup name=\"package_option\" selectedValue={package_option} onChange={this.handleChange}>\n              <div className=\"row\">\n                <div className=\"col-auto\"><label><Radio value=\"121\" id=\"121\" /> 2 pad</label></div>\n                <div className=\"col-auto\"><label><Radio value=\"124\" id=\"124\" /> 4 pad</label></div>\n              </div>\n            </RadioGroup>\n          </div>\n        );\n\n      case '13A':\n      case '135':\n      case '13L':\n      case '13A,135,13L':\n      case '135,13A,13L':\n      case '13A,13L,135':\n      case '13L,13A,135':\n      case '135,13L,13A':\n      case '13L,135,13A':\n        //let value = this.props.configuredPart.size\n        return(\n          <div className=\"alert alert-secondary\">\n            <p>ESR:</p>\n            <RadioGroup name=\"size\" selectedValue={size} onChange={this.handleChange}>\n              <div className=\"row\">\n                <div className=\"col-7\">\n                  <label htmlFor=\"70KOhm\">70 K Ohm  (Standard)</label>\n                </div>\n                <div className=\"col-2\"><Radio value=\"135\" id=\"70KOhm\" /></div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">\n                  <label htmlFor=\"50KOhm\">50 K Ohm (Optional)</label>\n                </div>\n                <div className=\"col-2\"><Radio value=\"13L\" id=\"50KOhm\" /></div>\n              </div>\n            </RadioGroup>\n          </div>\n        )\n\n      case 'A':\n      case '0':\n      case '2':\n      case '4':\n      case '8':\n        return(\n          <input type=\"hidden\" name=\"package_option\" value={package_option} />\n        );\n      case '4SD':\n      case '9SD':\n        return false;\n      case '1':\n        return(\n          <div className=\"alert alert-secondary\">\n            <p>2.0 x 1.6 mm package options:</p>\n            <RadioGroup name=\"package_option\" selectedValue={package_option} onChange={this.handleChange}>\n              <div className=\"row\">\n                <div className=\"col-10\">\n                  <label htmlFor=\"20x16bs\">0.45 mm height, metal lid, seam seal</label>\n                </div>\n                <div className=\"col-1\"><Radio value=\"BS\" id=\"20x16bs\" /></div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-10\">\n                  <label htmlFor=\"20x16bq\">0.7mm height, metal lid, resin seal</label>\n                </div>\n                <div className=\"col-1\"><Radio value=\"BQ\" id=\"20x16bq\" /></div>\n              </div>\n            </RadioGroup>\n          </div>\n        )\n\n      case '3':\n        return(\n          <div className=\"alert alert-secondary\">\n            <p>3.2 x 2.5 mm package options:</p>\n            <RadioGroup name=\"package_option\" selectedValue={package_option} onChange={this.handleChange}>\n              <div className=\"row\">\n                <div className=\"col-10\"><label htmlFor=\"32x25bs\">0.7mm height, metal lid, seam seal</label></div>\n                <div className=\"col-1\"><Radio value=\"BS\" id=\"32x25bs\" /></div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-10\"><label htmlFor=\"32x25bq\">1.1 mm height, ceramic lid, resin seal</label></div>\n                <div className=\"col-1\"><Radio value=\"BQ\" id=\"32x25bq\" /></div>\n              </div>\n            </RadioGroup>\n          </div>\n        );\n      case '5':\n        return(\n          <div className=\"alert alert-secondary\">\n            <p>5.0 x 3.2 mm package options:</p>\n            <RadioGroup name=\"package_option\" selectedValue={package_option} onChange={this.handleChange}>\n              <div className=\"row\">\n                <div className=\"col-7\"><label>1.0mm height, metal lid, seam seal</label></div>\n                <div className=\"col-sm-auto\"><label><Radio value=\"BS\" /> 4 pad</label></div>\n                <div className=\"col-sm-auto\"><label><Radio value=\"AS\" /> 2 pad</label></div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\"><label>1.2mm height, ceramic lid, resin seal</label></div>\n                <div className=\"col-sm-auto\"><label><Radio value=\"BQ\" /> 4 pad</label></div>\n                <div className=\"col-sm-auto\"><label><Radio value=\"AQ\" /> 2 pad</label></div>\n              </div>\n            </RadioGroup>\n          </div>\n        );\n      case '6':\n        return(\n          <div className=\"alert alert-secondary\">\n            <p>6.0 x 3.5 mm package options:</p>\n            <RadioGroup name=\"package_option\" selectedValue={package_option} onChange={this.handleChange}>\n              <div className=\"row\">\n                <div className=\"col\"><label htmlFor=\"6x3-bs\">Metal lid, seam seal</label></div>\n                <div className=\"col-auto\"><label><Radio value=\"BS\" id=\"6x3-bs\" /> 4 pad</label></div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col\"><label htmlFor=\"6x3-as\">Ceramic lid, resin seal:</label></div>\n\n                <div className=\"col-auto\"><label><Radio value=\"AS\" id=\"6x3-as\" /> 2 pad</label></div>\n              </div>\n            </RadioGroup>\n          </div>\n        );\n      case '7':\n        return(\n          <div className=\"alert alert-secondary\">\n            <p>7.0 x 5.0 mm package options:</p>\n            <RadioGroup name=\"package_option\" selectedValue={package_option} onChange={this.handleChange}>\n              <div className=\"row\">\n                <div className=\"col\"><label htmlFor=\"7x5-bs\">Metal lid, seam seal</label></div>\n                <div className=\"col-auto\"><label><Radio value=\"BS\" id=\"7x5-bs\" /> 4 pad</label></div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col\"><label htmlFor=\"7x5-as\">Ceramic lid, resin seal:</label></div>\n                <div className=\"col-auto\"><label><Radio value=\"AS\" id=\"7x5-as\" /> 2 pad</label></div>\n              </div>\n            </RadioGroup>\n          </div>\n        );\n\n      default:\n        // nothing\n    }\n  }\n\n  render(){\n    const { configuredPart } = this.props;\n    const size = configuredPart.size.value;\n    const package_option = configuredPart.package_option.value;\n\n    return(\n      <div>{ this.showOptions(size, package_option) }</div>\n    );\n  }\n}\n\nexport default SizeOptions;","import React, { Component } from 'react';\nimport Select from 'react-select';\n\nclass SelectPin1 extends Component{\n\n  handleChange = (selectedOption) => {\n    this.props.updateConfiguredPart( 'pin_1', selectedOption )\n  }\n\n  render(){\n    const { configuredPart, pin_1Options } = this.props\n    const pin_1Value = (typeof configuredPart.pin_1 !== 'undefined')? configuredPart.pin_1.value : ''\n\n    let optionValue = null\n    let backgroundColor = null\n    if( 0 === pin_1Options.length && '_' === pin_1Value ){\n      // No options available, and pin_1 isn't set\n      backgroundColor = '#eee'\n    } else if( 0 === pin_1Options.length && 0 < pin_1Value.length ){\n      // No options available, and pin_1 is set\n      backgroundColor = 'salmon'\n      optionValue = configuredPart.pin_1\n    } else if( 0 < pin_1Options.length && '_' === pin_1Value ){\n      // Options available, and pin_1 is not set\n      // Do nothing so placeholder text will show\n    } else if( 0 < pin_1Options.length && '_' !== pin_1Value && 0 < pin_1Value.length ){\n      // Options available, and pin_1 is set\n      optionValue = configuredPart.pin_1\n    }\n\n    const customStyles = {\n      control: styles => ({...styles, backgroundColor: backgroundColor})\n    }\n\n    return(\n      <div>\n        <label htmlFor=\"pin_1\">Pin 1 Connection</label>\n        <Select\n          name=\"pin_1\"\n          value={optionValue}\n          onChange={this.handleChange}\n          placeholder=\"Connection...\"\n          matchPos=\"start\"\n          options={pin_1Options}\n          styles={customStyles}\n          isClearable\n        />\n      </div>\n    );\n  };\n}\n\nexport default SelectPin1;","import React, { Component } from 'react';\nimport SelectSize from './selects/SelectSize';\nimport CompensationOptions from './CompensationOptions';\nimport AECQ200 from './checkboxes/AECQ200';\nimport VibrationResistant from './checkboxes/VibrationResistant'\nimport SelectEnableType from './selects/SelectEnableType'\nimport SelectTolerance from './selects/SelectTolerance';\nimport SelectSpread from './selects/SelectSpread';\nimport SelectOutput from './selects/SelectOutput';\nimport SelectVoltage from './selects/SelectVoltage';\nimport SelectStability from './selects/SelectStability';\nimport SelectLoad from './selects/SelectLoad';\nimport SelectOpTemp from './selects/SelectOpTemp';\nimport SizeOptions from './SizeOptions';\nimport SelectPin1 from './selects/SelectPin1';\n//import { aecq200Options } from './data/data'\nimport { getSizeOptions } from '../lib/utilities'\n\nclass AdditionalOptionsForm extends Component{\n  render(){\n    const { configuredPart, updateConfiguredPart, partOptions, loadingPartOptions } = this.props\n    const sizeOptions = getSizeOptions( configuredPart )\n\n    /**\n     * Show AEC-Q200 option if size:\n     *\n     * - Crystal-MHz  [1,2,3,4,5,6,7]\n     * - Crystal-kHz  [122,12A,13A,135,13L]\n     * - Oscillator   [1,2,3,5,7]\n     */\n\n    return(\n      <div className=\"additional-options-form\">\n        <div className=\"form-row\" style={{marginTop: '20px'}}>\n          { typeof partOptions.size !== 'undefined' &&\n          <div className=\"col-lg-auto\" style={{minWidth: '200px'}}>\n            <div className=\"row no-gutters\">\n              <div className=\"col\">\n                <SelectSize\n                  configuredPart={configuredPart}\n                  updateConfiguredPart={updateConfiguredPart}\n                  sizeOptions={partOptions.size}\n                  loadingPartOptions={loadingPartOptions}\n                />\n              </div>\n              { ( sizeOptions.aecq200 || sizeOptions.vibrationResistant )\n                && <div className=\"col-auto\" style={{paddingLeft: '12px'}}>\n                  <label>Options</label>\n                  { sizeOptions.aecq200\n                    && <AECQ200 configuredPart={configuredPart} updateConfiguredPart={updateConfiguredPart} /> }\n                  { sizeOptions.vibrationResistant\n                    && <VibrationResistant configuredPart={configuredPart} updateConfiguredPart={updateConfiguredPart} /> }\n                </div> }\n            {/*\n              { typeof configuredPart.size !== 'undefined'\n              && aecq200Options.parts.includes(configuredPart.product_type.value)\n              && aecq200Options.sizes.includes(configuredPart.size.value)\n              && ! ( 'O' === configuredPart.product_type.value && 'kHz' === configuredPart.frequency_unit.value )\n              && <div className=\"col-auto\" style={{paddingLeft: '12px'}}>\n                <label>Options</label>\n                <CheckboxAECQ200 configuredPart={configuredPart} updateConfiguredPart={updateConfiguredPart} />\n              </div> }\n            */}\n            </div>\n\n            { typeof configuredPart.size !== 'undefined'\n              && 0 !== configuredPart.size.value.length\n              && ('C' === configuredPart.product_type.value || 'K' === configuredPart.product_type.value)\n              && <div className=\"row\" style={{marginTop: '10px'}}><div className=\"col\"><SizeOptions configuredPart={configuredPart} updateConfiguredPart={updateConfiguredPart} /></div></div> }\n          </div> }\n\n          { typeof partOptions.enable_type !== 'undefined' && 'S' === configuredPart.product_type.value &&\n          <div className=\"col-lg\">\n            <SelectEnableType\n              configuredPart={configuredPart}\n              updateConfiguredPart={updateConfiguredPart}\n              enableTypeOptions={partOptions.enable_type}\n              loadingPartOptions={loadingPartOptions}\n            />\n          </div> }\n\n          { typeof partOptions.tolerance !== 'undefined' && ('C' === configuredPart.product_type.value || 'K' === configuredPart.product_type.value) &&\n          <div className=\"col-lg\">\n            <SelectTolerance\n              configuredPart={configuredPart}\n              updateConfiguredPart={updateConfiguredPart}\n              toleranceOptions={partOptions.tolerance}\n              loadingPartOptions={loadingPartOptions}\n            />\n          </div> }\n\n          { typeof partOptions.output !== 'undefined' &&\n            ( 'O' === configuredPart.product_type.value || 'T' === configuredPart.product_type.value || 'Y' === configuredPart.product_type.value ) &&\n          <div className=\"col-lg\">\n            <SelectOutput\n              configuredPart={configuredPart}\n              updateConfiguredPart={updateConfiguredPart}\n              outputOptions={partOptions.output}\n              loadingPartOptions={loadingPartOptions}\n            />\n          </div> }\n\n          { typeof partOptions.voltage !== 'undefined'\n            && ( 'O' === configuredPart.product_type.value\n              || 'T' === configuredPart.product_type.value\n              || 'Y' === configuredPart.product_type.value\n              || 'S' === configuredPart.product_type.value ) &&\n          <div className=\"col-lg-auto\" style={{minWidth: '300px'}}>\n            <SelectVoltage\n              configuredPart={configuredPart}\n              updateConfiguredPart={updateConfiguredPart}\n              voltageOptions={partOptions.voltage}\n              loadingPartOptions={loadingPartOptions}\n            />\n          </div> }\n\n          { typeof partOptions.spread !== 'undefined' && 'S' === configuredPart.product_type.value &&\n          <div className=\"col-lg\">\n            <SelectSpread\n              configuredPart={configuredPart}\n              updateConfiguredPart={updateConfiguredPart}\n              spreadOptions={partOptions.spread}\n              loadingPartOptions={loadingPartOptions}\n            />\n          </div> }\n\n          { typeof partOptions.stability !== 'undefined' &&\n          <div className=\"col-lg\">\n            <SelectStability\n              configuredPart={configuredPart}\n              updateConfiguredPart={updateConfiguredPart}\n              stabilityOptions={partOptions.stability}\n              loadingPartOptions={loadingPartOptions}\n            />\n          </div> }\n\n          { typeof partOptions.load !== 'undefined' && ('C' === configuredPart.product_type.value || 'K' === configuredPart.product_type.value) &&\n          <div className=\"col-lg\">\n            <SelectLoad\n              configuredPart={configuredPart}\n              updateConfiguredPart={updateConfiguredPart}\n              loadOptions={partOptions.load}\n              loadingPartOptions={loadingPartOptions}\n            />\n          </div> }\n\n          { typeof partOptions.optemp !== 'undefined' &&\n          <div className=\"col-lg\">\n            <SelectOpTemp\n              configuredPart={configuredPart}\n              updateConfiguredPart={updateConfiguredPart}\n              optempOptions={partOptions.optemp}\n              loadingPartOptions={loadingPartOptions}\n            />\n          </div> }\n\n          { typeof partOptions.pin_1 !== 'undefined' &&\n            'T' === configuredPart.product_type.value &&\n          <div className=\"col-lg\">\n            <SelectPin1\n              configuredPart={configuredPart}\n              updateConfiguredPart={updateConfiguredPart}\n              pin_1Options={partOptions.pin_1}\n              loadingPartOptions={loadingPartOptions}\n            />\n          </div> }\n        </div>\n\n        { typeof configuredPart.product_type !== 'undefined'\n          && 'T' === configuredPart.product_type.value\n          && typeof configuredPart.output !== 'undefined'\n          && 'Clipped Sine' === configuredPart.output.label\n          && typeof configuredPart.stability !== 'undefined'\n          && '' !== configuredPart.stability.value\n          && '_' !== configuredPart.stability.value\n          && 'U' !== configuredPart.stability.value\n          && typeof configuredPart.size !== 'undefined'\n          && '3' === configuredPart.size.value\n          && <CompensationOptions configuredPart={configuredPart} updateConfiguredPart={updateConfiguredPart} />\n        }\n      </div>\n    );\n  }\n}\n\nexport default AdditionalOptionsForm;","import React, { Component } from 'react'\n\n// Server Comms\nimport axios from 'axios'\nimport { FOXPART_API_ROOT } from '../api-config'\n\nclass PartDetails extends Component{\n\n  state = {\n    additionalPartDetails: null,\n    foundAdditionalDetails: null,\n    partDetailRows: {}\n  }\n\n  constructor(props){\n    super(props)\n    const { configuredPart } = this.props\n    Object.keys(configuredPart).map( key => this.setPartDetailRow(key,configuredPart[key]) )\n  }\n\n  /**\n   * Called after this component is rendered for the\n   * first time. This is where we load external data.\n   */\n  componentDidMount(){\n    const { configuredPart } = this.props\n    const axiosUrl = `${FOXPART_API_ROOT}?partnum=${configuredPart.number.label}`\n    // FO7HSCBE60.0\n    console.log(`🔔 [PartDetails.js]->componentDidMount is calling: `, axiosUrl )\n\n    axios\n      .get(axiosUrl)\n      .then( response => {\n        const additionalDetails = response.data.data\n        console.log(`⏰ [PartDetails.js]->componentDidMount() Axios request returned data. additionalDetails = `, additionalDetails )\n\n        if( null !== additionalDetails ){\n          Object.keys(additionalDetails).map( key => this.setPartDetailRow(key,additionalDetails[key]) )\n          this.setState({additionalPartDetails: additionalDetails, foundAdditionalDetails: true})\n        } else {\n          this.setPartDetailRow('nodetails',{label: 'Check Availability', value: 'Please check with FOX regarding the availability of this part.'})\n          this.setState({foundAdditionalDetails: false})\n        }\n      })\n      .catch( error => console.log(error) )\n  }\n\n  setPartDetailRow = (key,partDetail) => {\n    const { configuredPart } = this.props\n    const { partDetailRows } = this.state\n    let returnValue = null\n    let label = partDetail.label\n    let displayOrder = ( typeof partDetail.displayorder !== 'undefined' )? parseFloat( partDetail.displayorder ) + Object.keys(configuredPart).length : 0\n    switch(key){\n      case 'product_photo_part_image_url':\n        returnValue = <img src={partDetail.value} style={{maxWidth: '80px'}} alt=\"Part\" />\n        break\n\n      case 'data_sheet_url':\n        returnValue = <a href={partDetail.value}>Download Data Sheet (PDF)</a>\n        break\n\n      case 'description':\n      case 'number':\n      case 'package_type':\n      case 'frequency_unit':\n      case 'frequency':\n        // nothing\n        break\n\n      case 'optemp':\n        displayOrder = 7\n        label = 'Op Temp'\n        returnValue = partDetail.label\n        break\n\n      case 'product_type':\n        displayOrder = 1\n        label = 'Product Type'\n        returnValue = configuredPart.product_type.label + ' ' + configuredPart.frequency.value + configuredPart.frequency_unit.label + ' - ' + configuredPart.package_type.label\n        break\n\n      case 'output':\n        displayOrder = 3\n        label = key.charAt(0).toUpperCase() + key.slice(1)\n        returnValue = ('HA' === partDetail.label)? 'HCMOS, AEC-Q200' : partDetail.label\n        break\n\n      case 'size':\n      case 'stability':\n      case 'tolerance':\n      case 'voltage':\n      case 'load':\n        if( 'tolerance' === key ) displayOrder = 3\n        if( 'size' === key ) displayOrder = 2\n        if( 'output' === key ) displayOrder = 3\n        if( 'voltage' === key ) displayOrder = 4\n        if( 'stability' === key ) displayOrder = 5\n        if( 'load' === key ) displayOrder = 6\n        label = key.charAt(0).toUpperCase() + key.slice(1)\n        returnValue = partDetail.label\n        break\n\n      case 'nodetails':\n        partDetailRows[9999] = <tr key={9999}><th scope=\"row\">Availability</th><td>Please check with FOX regarding this part's availability.</td></tr>\n        return\n\n      default:\n        if( '' === partDetail.label){\n          console.log(`🔔 partDetail.label is empty for partDetail.value = '${partDetail.value}'. So that we don't return a row with an empty label, we are returning...`)\n          return\n        }\n\n        returnValue = partDetail.value\n    }\n\n    if( null !== returnValue && '' !== returnValue )\n      partDetailRows[displayOrder] = <tr key={key}><th scope=\"row\" style={{whiteSpace: 'nowrap'}}>{label}</th><td>{returnValue}</td></tr>\n  }\n\n  handleClick = (e) => {\n    const { cart, configuredPart, editing, setCurrentView } = this.props;\n    if( editing ){\n      if( typeof configuredPart.cart_id !== 'undefined' && configuredPart.number.value !== cart[configuredPart.cart_id].number.value ){\n        setCurrentView('UpdateCartPart');\n      } else {\n        setCurrentView('ShoppingCart');\n      }\n    } else {\n      this.props.updateCart('add','');\n    }\n  }\n\n  render(){\n    const { cart, configuredPart, editing } = this.props\n    let buttonText = 'Add to Quote'\n    if( typeof configuredPart.cart_id !== 'undefined' && configuredPart.number.value !== cart[configuredPart.cart_id].number.value ){\n      buttonText = 'Update Part'\n    } else if(editing) {\n      buttonText = 'Return to Cart'\n    }\n\n    return(\n      <div className=\"part-details\">\n        <hr />\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <h4>Configured Part</h4>\n          </div>\n          <div className=\"col-6 text-right\">\n            <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleClick}>{buttonText}</button>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-3\">\n            <label htmlFor=\"\">Model</label><br/>\n            {configuredPart.number.label}\n          </div>\n          <div className=\"col-md-9\">\n            <label htmlFor=\"\">Details</label>\n            <table className=\"table table-sm table-striped\">\n              <colgroup>\n                <col />\n                <col style={{width: '100%'}}/>\n              </colgroup>\n              <tbody>\n                { this.state.partDetailRows.length !== 0 &&\n                  Object.keys(this.state.partDetailRows).map( key => this.state.partDetailRows[key] ) }\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <hr/>\n        <div className=\"row\">\n          <div className=\"col-md-12 text-right\">\n            <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleClick}>{buttonText}</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PartDetails;","import React from 'react';\n\nimport SelectProductType from './selects/SelectProductType';\nimport InputFrequency from './InputFrequency'\nimport FrequencyUnit from './FrequencyUnit'\nimport AdditionalOptionsForm from './AdditionalOptionsForm';\nimport PartDetails from './PartDetails';\nimport { API_ENV } from '../api-config';\n\nclass PartSelector extends React.Component{\n\n  /**\n   * Handles a change in state for an input element\n   *\n   * @param      {object}  e       A changeEvent object\n   */\n  handleChange = (e) => {\n    if( window.confirm('Updating this setting will reset your additional options. Continue?') )\n      this.props.updateConfiguredPart(e.target.name,{value: e.target.value, label: e.target.value});\n  }\n\n  render(){\n    const { cart, configuredPart, editing, partOptions, updateConfiguredPart } = this.props;\n\n    return (\n      <div className=\"PartSelector\">\n        <form ref={form => this.form = form}>\n          <div className=\"form-row\">\n            <div className=\"col-xl-4\">\n              <SelectProductType\n                currentView={this.props.currentView}\n                product_type={configuredPart.product_type}\n                updateConfiguredPart={this.props.updateConfiguredPart}\n                ReactGA={this.props.ReactGA}\n              />\n            </div>\n            <div className=\"col-xl-8\">\n              <div className=\"row\">\n                <div className=\"col-md-6 col-frequency\">\n                  <InputFrequency\n                    updateConfiguredPart={this.props.updateConfiguredPart}\n                    configuredPart={configuredPart}\n                  />\n                </div>\n                <div className=\"col-sm-2\">\n                  <FrequencyUnit\n                    updateConfiguredPart={this.props.updateConfiguredPart}\n                    configuredPart={configuredPart}\n                  />\n                </div>\n                <div className=\"col-sm-3\">\n                  <label className=\"\" htmlFor=\"package_type\">Package Type</label>\n                  <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"radio\" name=\"package_type\" id=\"package_smd\" value=\"smd\" checked={configuredPart.package_type.value.toLowerCase() === 'smd'} onChange={this.handleChange} />\n                    <label className=\"form-check-label\" htmlFor=\"package_smd\">\n                      SMD\n                    </label>\n                  </div>\n                  { ('C' === configuredPart.product_type.value || 'K' === configuredPart.product_type.value) &&\n                  <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"radio\" name=\"package_type\" id=\"package_pinthru\" value=\"pin-thru\" checked={configuredPart.package_type.value.toLowerCase() === 'pin-thru'} onChange={this.handleChange} />\n                    <label className=\"form-check-label\" htmlFor=\"package_pinthru\">\n                      Pin-Thru\n                    </label>\n                  </div> }\n                </div>\n              </div>\n            </div>\n            {/* Formerly MHz/kHz and SMD/Pin-Thru went here. */}\n          </div>\n          { typeof configuredPart.product_type !== 'undefined'\n            && 0 !== configuredPart.product_type.value.length\n            && '_' !== configuredPart.product_type.value &&\n            <AdditionalOptionsForm\n              configuredPart={configuredPart}\n              updateConfiguredPart={updateConfiguredPart}\n              partOptions={partOptions}\n              loadingPartOptions={this.props.loadingPartOptions}\n            /> }\n          { this.props.isPartConfigured(configuredPart)\n            && 'web' === API_ENV &&\n            <PartDetails cart={cart} configuredPart={configuredPart} updateCart={this.props.updateCart} setCurrentView={this.props.setCurrentView} editing={editing} /> }\n        </form>\n      </div>\n    );\n  }\n};\n\nexport default PartSelector;"],"sourceRoot":""}